Only in doc: .DS_Store
diff -ur doc-0.6.3/Makefile doc/Makefile
--- doc-0.6.3/Makefile	2010-04-10 17:26:49.000000000 +0900
+++ doc/Makefile	2010-04-10 17:23:07.000000000 +0900
@@ -9,9 +9,9 @@
 PAPEROPT_a4      = -D latex_paper_size=a4
 PAPEROPT_letter  = -D latex_paper_size=letter
 ALLSPHINXOPTS = -d _build/doctrees $(PAPEROPT_$(PAPER)) \
-                $(SPHINXOPTS) .
+                $(SPHINXOPTS) $(O) .
 
-.PHONY: help clean html dirhtml pickle htmlhelp qthelp latex changes linkcheck doctest
+.PHONY: help clean html dirhtml pickle htmlhelp qthelp latex changes linkcheck doctest man
 
 help:
 	@echo "Please use \`make <target>' where <target> is one of"
@@ -19,7 +19,9 @@
 	@echo "  dirhtml   to make HTML files called index.html in directories"
 	@echo "  pickle    to make pickle files"
 	@echo "  htmlhelp  to make HTML files and a HTML help project"
+	@echo "  epub      to make an epub file"
 	@echo "  latex     to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
+	@echo "  man       to make manual pages"
 	@echo "  changes   to make an overview over all changed/added/deprecated items"
 	@echo "  linkcheck to check all external links for integrity"
 
@@ -27,36 +29,40 @@
 	-rm -rf _build/*
 
 html:
-	mkdir -p _build/html _build/doctrees
 	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) _build/html
 	@echo
 	@echo "Build finished. The HTML pages are in _build/html."
 
 dirhtml:
-	mkdir -p _build/dirhtml _build/doctrees
 	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) _build/dirhtml
 	@echo
 	@echo "Build finished. The HTML pages are in _build/dirhtml."
 
+singlehtml:
+	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) _build/singlehtml
+	@echo
+	@echo "Build finished. The HTML page is in _build/singlehtml."
+
 text:
-	mkdir -p _build/text _build/doctrees
 	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) _build/text
 	@echo
 	@echo "Build finished."
 
+man:
+	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) _build/man
+	@echo
+	@echo "Build finished."
+
 pickle:
-	mkdir -p _build/pickle _build/doctrees
 	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) _build/pickle
 
 htmlhelp:
-	mkdir -p _build/htmlhelp _build/doctrees
 	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) _build/htmlhelp
 	@echo
 	@echo "Build finished; now you can run HTML Help Workshop with the" \
 	      ".hhp project file in _build/htmlhelp."
 
 qthelp:
-	mkdir -p _build/qthelp _build/doctrees
 	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) _build/qthelp
 	@echo
 	@echo "Build finished; now you can run qcollectiongenerator with the" \
@@ -65,8 +71,12 @@
 	@echo "To view the help collection:"
 	@echo "# assistant -collectionFile _build/qthelp/Sphinx.qhc"
 
+epub:
+	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) _build/epub
+	@echo
+	@echo "Build finished. The epub file is in _build/epub."
+
 latex:
-	mkdir -p _build/latex _build/doctrees
 	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) _build/latex
 	@echo
 	@echo "Build finished; the LaTeX files are in _build/latex."
@@ -74,18 +84,15 @@
 	      "run these through (pdf)latex."
 
 changes:
-	mkdir -p _build/changes _build/doctrees
 	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) _build/changes
 	@echo
 	@echo "The overview file is in _build/changes."
 
 linkcheck:
-	mkdir -p _build/linkcheck _build/doctrees
 	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) _build/linkcheck
 	@echo
 	@echo "Link check complete; look for any errors in the above output " \
 	      "or in _build/linkcheck/output.txt."
 
 doctest:
-	mkdir -p _build/doctest _build/doctrees
 	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) _build/doctest
Only in doc: _build
diff -ur doc-0.6.3/_templates/index.html doc/_templates/index.html
--- doc-0.6.3/_templates/index.html	2010-04-10 17:26:49.000000000 +0900
+++ doc/_templates/index.html	2010-03-01 09:28:22.000000000 +0900
@@ -4,7 +4,7 @@
   <h1>Welcome</h1>
 
   <div class="quotebar">
-    <p>What users say:</p>
+    <p><em>What users say:</em></p>
     <p>&ldquo;Cheers for a great tool that actually makes programmers <b>want</b>
       to write documentation!&rdquo;</p>
   </div>
@@ -12,28 +12,30 @@
   <p>
     Sphinx is a tool that makes it easy to create intelligent and beautiful
     documentation, written by Georg Brandl and licensed under the BSD license.</p>
-  <p>It was originally created to translate <a href="http://docs.python.org/dev/">the
-    new Python documentation</a>, and it has excellent support for the documentation
-    of Python projects, but other documents can be written with it too.  Of course,
-    this site is also created from reStructuredText sources using Sphinx!
+  <p>It was originally created for <a href="http://docs.python.org/dev/">the
+    new Python documentation</a>, and it has excellent facilities for the
+    documentation of Python projects, but C/C++ is already supported as well,
+    and it is planned to add special support for other languages as well.  Of
+    course, this site is also created from reStructuredText sources using
+    Sphinx!
   </p>
   <p>
-    It is still under constant development, and the following features are
-    already present, work fine and can be seen &#8220;in action&#8221; in the
-    Python docs:
+    Sphinx is under constant development.  The following features are present,
+    work fine and can be seen &#8220;in action&#8221; in the Python docs:
   </p>
   <ul>
-    <li><b>Output formats:</b> HTML (including Windows HTML Help) and LaTeX, for
-    printable PDF versions</li>
+    <li><b>Output formats:</b> HTML (including Windows HTML Help), LaTeX (for
+      printable PDF versions), manual pages, plain text</li>
     <li><b>Extensive cross-references:</b> semantic markup and automatic links
-    for functions, classes, glossary terms and similar pieces of information</li>
+      for functions, classes, citations, glossary terms and similar pieces of
+      information</li>
     <li><b>Hierarchical structure:</b> easy definition of a document tree, with
-    automatic links to siblings, parents and children</li>
+      automatic links to siblings, parents and children</li>
     <li><b>Automatic indices:</b> general index as well as a module index</li>
     <li><b>Code handling:</b> automatic highlighting using the <a
-    href="http://pygments.org">Pygments</a> highlighter</li>
+      href="http://pygments.org">Pygments</a> highlighter</li>
     <li><b>Extensions:</b> automatic testing of code snippets, inclusion of
-    docstrings from Python modules, and more</li>
+      docstrings from Python modules (API docs), and more</li>
   </ul>
   <p>
     Sphinx uses <a href="http://docutils.sf.net/rst.html">reStructuredText</a>
@@ -42,36 +44,48 @@
     suite, the <a href="http://docutils.sf.net/">Docutils</a>.
   </p>
 
-  <h2>Examples</h2>
-  <p>
-    The <a href="http://docs.python.org/dev/">Python documentation</a> and
-    this page are different examples of Sphinx in use.
-    You can also download a <a href="http://sphinx.pocoo.org/sphinx.pdf">PDF version</a>
-    of the Sphinx documentation, generated from the LaTeX Sphinx produces.
-  </p>
-  <p>
-    For examples of how Sphinx source files look, use the &#8220;Show source&#8221;
-    links on all pages of the documentation apart from this welcome page.
-  </p>
-  <p>Links to more documentation generated with Sphinx can be found on the
-    <a href="{{ pathto("examples") }}">Projects using Sphinx</a> page.
-  </p>
-
   <h2>Documentation</h2>
+
   <table class="contentstable" align="center" style="margin-left: 30px"><tr>
     <td width="50%">
+      <p class="biglink"><a class="biglink" href="{{ pathto("tutorial") }}">First steps with Sphinx</a><br/>
+         <span class="linkdescr">overview of basic tasks</span></p>
       <p class="biglink"><a class="biglink" href="{{ pathto("contents") }}">Contents</a><br/>
          <span class="linkdescr">for a complete overview</span></p>
+    </td><td width="50%">
       <p class="biglink"><a class="biglink" href="{{ pathto("search") }}">Search page</a><br/>
          <span class="linkdescr">search the documentation</span></p>
-    </td><td width="50%">
       <p class="biglink"><a class="biglink" href="{{ pathto("genindex") }}">General Index</a><br/>
          <span class="linkdescr">all functions, classes, terms</span></p>
-      <p class="biglink"><a class="biglink" href="{{ pathto("modindex") }}">Module Index</a><br/>
-         <span class="linkdescr">quick access to all documented modules</span></p>
     </td></tr>
   </table>
 
+  <p>
+    You can also download PDF versions of the Sphinx documentation:
+    a <a href="http://sphinx.pocoo.org/sphinx.pdf">version</a> generated from
+    the LaTeX Sphinx produces, and
+    a <a href="http://sphinx.pocoo.org/sphinx-rst2pdf.pdf">version</a> generated
+    by rst2pdf.
+  </p>
+
+  <h2>Examples</h2>
+  <p>Links to documentation generated with Sphinx can be found on the
+    <a href="{{ pathto("examples") }}">Projects using Sphinx</a> page.
+  </p>
+  <p>
+    For examples of how Sphinx source files look, use the &#8220;Show
+    source&#8221; links on all pages of the documentation apart from this
+    welcome page.
+  </p>
+
+  <p>You may also be interested in the very nice
+    <a href="http://matplotlib.sourceforge.net/sampledoc/">tutorial</a> on how to
+    create a customized documentation using Sphinx written by the matplotlib
+    developers.</p>
+
+  <p>There is a <a href="http://sphinx.shibu.jp/">Japanese translation</a>
+    of this documentation, thanks to Yoshiki Shibukawa.</p>
+
   <h2>Get Sphinx</h2>
   <p>
     Sphinx is available as an <a
diff -ur doc-0.6.3/_templates/indexsidebar.html doc/_templates/indexsidebar.html
--- doc-0.6.3/_templates/indexsidebar.html	2010-04-10 17:26:49.000000000 +0900
+++ doc/_templates/indexsidebar.html	2010-03-01 09:28:22.000000000 +0900
@@ -11,6 +11,8 @@
 <p>Get Sphinx from the <a href="http://pypi.python.org/pypi/Sphinx">Python Package
 Index</a>, or install it with:</p>
 <pre>easy_install -U Sphinx</pre>
+<p>Latest <a href="http://sphinx.pocoo.org/latest/">development version docs</a>
+are also available.</p>
 {% endif %}
 
 <h3>Questions? Suggestions?</h3>
diff -ur doc-0.6.3/_templates/layout.html doc/_templates/layout.html
--- doc-0.6.3/_templates/layout.html	2010-04-10 17:26:49.000000000 +0900
+++ doc/_templates/layout.html	2010-03-01 09:28:22.000000000 +0900
@@ -1,8 +1,19 @@
 {% extends "!layout.html" %}
 
+{% block extrahead %}
+{{ super() }}
+{%- if not embedded %}
+<style type="text/css">
+  table.right { float: right; margin-left: 20px; }
+  table.right td { border: 1px solid #ccc; }
+</style>
+{%- endif %}
+{% endblock %}
+
 {% block rootrellink %}
         <li><a href="{{ pathto('index') }}">Sphinx home</a>&nbsp;|&nbsp;</li>
-        <li><a href="{{ pathto('contents') }}">Documentation</a>&raquo;</li>
+        <li><a href="{{ pathto('contents') }}">Documentation</a>
+          &raquo;</li>
 {% endblock %}
 
 {% block header %}
diff -ur doc-0.6.3/builders.rst doc/builders.rst
--- doc-0.6.3/builders.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/builders.rst	2010-04-10 17:23:07.000000000 +0900
@@ -36,6 +36,16 @@
 
    .. versionadded:: 0.6
 
+.. class:: SingleFileHTMLBuilder
+
+   This is an HTML builder that combines the whole project in one output file.
+   (Obviously this only works with smaller projects.)  The file is named like
+   the master document.  No indices will be generated.
+
+   Its name is ``singlehtml``.
+
+   .. versionadded:: 1.0
+
 .. module:: sphinx.builders.htmlhelp
 .. class:: HTMLHelpBuilder
 
@@ -49,20 +59,37 @@
 .. class:: QtHelpBuilder
 
    This builder produces the same output as the standalone HTML builder, but
-   also generates Qt help collection support files that allow
+   also generates `Qt help`_ collection support files that allow
    the Qt collection generator to compile them.
 
    Its name is ``qthelp``.
 
+   .. _Qt help: http://doc.trolltech.com/4.6/qthelp-framework.html
+
 .. module:: sphinx.builders.devhelp
 .. class:: DevhelpBuilder
 
    This builder produces the same output as the standalone HTML builder, but
-   also generates `GNOME Devhelp <http://live.gnome.org/devhelp>`__ 
+   also generates `GNOME Devhelp <http://live.gnome.org/devhelp>`__
    support file that allows the GNOME Devhelp reader to view them.
 
    Its name is ``devhelp``.
 
+.. module:: sphinx.builders.epub
+.. class:: EpubBuilder
+
+   This builder produces the same output as the standalone HTML builder, but
+   also generates an *epub* file for ebook readers.  See :ref:`epub-faq` for
+   details about it.  For definition of the epub format, have a look at
+   `<http://www.idpf.org/specs.htm>`_ or `<http://en.wikipedia.org/wiki/EPUB>`_.
+
+   Some ebook readers do not show the link targets of references.  Therefore
+   this builder adds the targets after the link when necessary.  The display
+   of the URLs can be customized by adding CSS rules for the class
+   ``link-target``.
+
+   Its name is ``epub``.
+
 .. module:: sphinx.builders.latex
 .. class:: LaTeXBuilder
 
@@ -84,6 +111,12 @@
 
    Its name is ``latex``.
 
+Note that a direct PDF builder using ReportLab is available in `rst2pdf
+<http://rst2pdf.googlecode.com>`_ version 0.12 or greater.  You need to add
+``'rst2pdf.pdfbuilder'`` to your :confval:`extensions` to enable it, its name is
+``pdf``.  Refer to the `rst2pdf manual
+<http://lateral.netmanagers.com.ar/static/manual.pdf>`_ for details.
+
 .. module:: sphinx.builders.text
 .. class:: TextBuilder
 
@@ -95,6 +128,22 @@
 
    .. versionadded:: 0.4
 
+.. module:: sphinx.builders.manpage
+.. class:: ManualPageBuilder
+
+   This builder produces manual pages in the groff format.  You have to specify
+   which documents are to be included in which manual pages via the
+   :confval:`man_pages` configuration value.
+
+   Its name is ``man``.
+
+   .. note::
+
+      This builder requires the docutils manual page writer, which is only
+      available as of docutils 0.6.
+
+   .. versionadded:: 1.0
+
 .. currentmodule:: sphinx.builders.html
 .. class:: SerializingHTMLBuilder
 
@@ -102,7 +151,7 @@
    (`pickle`, `simplejson`, `phpserialize`, and others) to dump the generated
    HTML documentation.  The pickle builder is a subclass of it.
 
-   A concreate subclass of this builder serializing to the `PHP serialization`_
+   A concrete subclass of this builder serializing to the `PHP serialization`_
    format could look like this::
 
         import phpserialize
@@ -247,8 +296,8 @@
    ``project``, ``copyright``, ``release``, ``version``
       The same values as given in the configuration file.
 
-   ``style``, ``use_modindex``
-      :confval:`html_style` and :confval:`html_use_modindex`, respectively.
+   ``style``
+      :confval:`html_style`.
 
    ``last_updated``
       Date of last build.
@@ -273,7 +322,9 @@
 ``environment.pickle``
    The build environment.  This is always a pickle file, independent of the
    builder and a copy of the environment that was used when the builder was
-   started.  (XXX: document common members)
+   started.
+
+   .. todo:: Document common members.
 
-   Unlike the other pickle files this pickle file requires that the sphinx
-   module is available on unpickling.
+   Unlike the other pickle files this pickle file requires that the ``sphinx``
+   package is available on unpickling.
Only in doc-0.6.3: concepts.rst
diff -ur doc-0.6.3/conf.py doc/conf.py
--- doc-0.6.3/conf.py	2010-04-10 17:26:49.000000000 +0900
+++ doc/conf.py	2010-04-10 17:23:07.000000000 +0900
@@ -2,90 +2,74 @@
 #
 # Sphinx documentation build configuration file
 
-import sys, os, re
+import re
+import sphinx
 
-# Add any Sphinx extension module names here, as strings. They can be extensions
-# coming with Sphinx (named 'sphinx.addons.*') or your custom ones.
 extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest', 'sphinx.ext.todo',
-              'sphinx.ext.autosummary']
-
-extlinks = {'issue': ('http://bugs.python.org/issue', 'issue ')}
-
-# Add any paths that contain templates here, relative to this directory.
-templates_path = ['_templates']
-
-# The suffix of source filenames.
-source_suffix = '.rst'
+              'sphinx.ext.autosummary', 'sphinx.ext.extlinks']
 
-# The master toctree document.
 master_doc = 'contents'
+templates_path = ['_templates']
+exclude_patterns = ['_build']
 
-# General substitutions.
 project = 'Sphinx'
-copyright = '2007-2009, Georg Brandl'
-
-# The default replacements for |version| and |release|, also used in various
-# other places throughout the built documents.
-import sphinx
+copyright = '2007-2010, Georg Brandl'
 version = sphinx.__released__
 release = version
-
-# Show author directives in the output.
 show_authors = True
 
-# The HTML template theme.
 html_theme = 'sphinxdoc'
-
-# A list of ignored prefixes names for module index sorting.
 modindex_common_prefix = ['sphinx.']
-
-# Add any paths that contain custom static files (such as style sheets) here,
-# relative to this directory. They are copied after the builtin static files,
-# so a file named "default.css" will overwrite the builtin "default.css".
 html_static_path = ['_static']
-
-# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
-# using the given strftime format.
-html_last_updated_fmt = '%b %d, %Y'
-
-# Content template for the index page.
 html_index = 'index.html'
-
-# Custom sidebar templates, maps page names to templates.
-html_sidebars = {'index': 'indexsidebar.html'}
-
-# Additional templates that should be rendered to pages, maps page names to
-# templates.
+html_sidebars = {'index': ['indexsidebar.html', 'searchbox.html']}
 html_additional_pages = {'index': 'index.html'}
-
-# Generate an OpenSearch description with that URL as the base.
 html_use_opensearch = 'http://sphinx.pocoo.org'
 
-# Output file base name for HTML help builder.
 htmlhelp_basename = 'Sphinxdoc'
 
-# Grouping the document tree into LaTeX files. List of tuples
-# (source start file, target name, title, author, documentclass [howto/manual]).
+epub_theme = 'epub'
+epub_basename = 'sphinx'
+epub_author = 'Georg Brandl'
+epub_publisher = 'http://sphinx.pocoo.org/'
+epub_scheme = 'url'
+epub_identifier = epub_publisher
+epub_pre_files = [('index', 'Welcome')]
+epub_exclude_files = ['_static/opensearch.xml', '_static/doctools.js',
+    '_static/jquery.js', '_static/searchtools.js',
+    '_static/basic.css', 'search.html']
+
 latex_documents = [('contents', 'sphinx.tex', 'Sphinx Documentation',
                     'Georg Brandl', 'manual', 1)]
-
-# Add our logo to the LaTeX file.
 latex_logo = '_static/sphinx.png'
-
-# Additional stuff for the LaTeX preamble.
 latex_elements = {
     'fontpkg': '\\usepackage{palatino}',
 }
 
-# Put TODOs into the output.
+autodoc_member_order = 'groupwise'
 todo_include_todos = True
+extlinks = {'rstref': ('http://docutils.sourceforge.net/docs/ref/rst/'
+                       'restructuredtext.html#%s', ''),
+            'rstrole': ('http://docutils.sourceforge.net/docs/ref/rst/'
+                        'roles.html#%s', ''),
+            'rstdir': ('http://docutils.sourceforge.net/docs/ref/rst/'
+                       'directives.html#%s', '')}
+
+man_pages = [
+    ('contents', 'sphinx-all', 'Sphinx documentation generator system manual',
+     'Georg Brandl', 1),
+    ('man/sphinx-build', 'sphinx-build', 'Sphinx documentation generator tool',
+     '', 1),
+    ('man/sphinx-quickstart', 'sphinx-quickstart', 'Sphinx documentation '
+     'template generator', '', 1),
+]
 
 
 # -- Extension interface -------------------------------------------------------
 
 from sphinx import addnodes
 
-dir_sig_re = re.compile(r'\.\. ([^:]+)::(.*)$')
+dir_sig_re = re.compile(r'\.\. (.+?)::(.*)$')
 
 def parse_directive(env, sig, signode):
     if not sig.startswith('.'):
@@ -132,5 +116,6 @@
                              parse_directive)
     app.add_description_unit('role', 'role', 'pair: %s; role', parse_role)
     app.add_description_unit('confval', 'confval',
-                             'pair: %s; configuration value')
+                             objname='configuration value',
+                             indextemplate='pair: %s; configuration value')
     app.add_description_unit('event', 'event', 'pair: %s; event', parse_event)
diff -ur doc-0.6.3/config.rst doc/config.rst
--- doc-0.6.3/config.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/config.rst	2010-04-10 17:23:07.000000000 +0900
@@ -1,5 +1,7 @@
 .. highlightlang:: python
 
+.. _build-config:
+
 The build configuration file
 ============================
 
@@ -87,12 +89,37 @@
    The document name of the "master" document, that is, the document that
    contains the root :dir:`toctree` directive.  Default is ``'contents'``.
 
+.. confval:: exclude_patterns
+
+   A list of glob-style patterns that should be excluded when looking for source
+   files. [1]_ They are matched against the source file names relative to the
+   source directory, using slashes as directory separators on all platforms.
+
+   Example patterns:
+
+   - ``'library/xml.rst'`` -- ignores the ``library/xml.rst`` file (replaces
+     entry in :confval:`unused_docs`
+   - ``'library/xml'`` -- ignores the ``library/xml`` directory (replaces entry
+     in :confval:`exclude_trees`)
+   - ``'library/xml*'`` -- ignores all files and directories starting with
+     ``library/xml``
+   - ``'**/.svn'`` -- ignores all ``.svn`` directories (replaces entry in
+     :confval:`exclude_dirnames`)
+
+   :confval:`exclude_patterns` is also consulted when looking for static files
+   in :confval:`html_static_path`.
+
+   .. versionadded:: 1.0
+
 .. confval:: unused_docs
 
    A list of document names that are present, but not currently included in the
    toctree.  Use this setting to suppress the warning that is normally emitted
    in that case.
 
+   .. deprecated:: 1.0
+      Use :confval:`exclude_patterns` instead.
+
 .. confval:: exclude_trees
 
    A list of directory paths, relative to the source directory, that are to be
@@ -101,6 +128,9 @@
 
    .. versionadded:: 0.4
 
+   .. deprecated:: 1.0
+      Use :confval:`exclude_patterns` instead.
+
 .. confval:: exclude_dirnames
 
    A list of directory names that are to be excluded from any recursive
@@ -110,15 +140,8 @@
 
    .. versionadded:: 0.5
 
-.. confval:: exclude_dirs
-
-   A list of directory names, relative to the source directory, that are to be
-   excluded from the search for source files.
-
-   .. deprecated:: 0.5
-      This does not take subdirs of the excluded directories into account.  Use
-      :confval:`exclude_trees` or :confval:`exclude_dirnames`, which match the
-      expectations.
+   .. deprecated:: 1.0
+      Use :confval:`exclude_patterns` instead.
 
 .. confval:: locale_dirs
 
@@ -126,9 +149,9 @@
 
    Directories in which to search for additional Sphinx message catalogs (see
    :confval:`language`), relative to the source directory.  The directories on
-   this path are searched by the standard :mod:`gettext` module for a domain of
-   ``sphinx``; so if you add the directory :file:`./locale` to this settting,
-   the message catalogs must be in
+   this path are searched by the standard :mod:`gettext` module for a text
+   domain of ``sphinx``; so if you add the directory :file:`./locale` to this
+   settting, the message catalogs must be in
    :file:`./locale/{language}/LC_MESSAGES/sphinx.mo`.
 
    The default is ``[]``.
@@ -161,14 +184,23 @@
 
    .. versionadded:: 0.6
 
+.. confval:: default_domain
+
+   .. index:: default; domain
+
+   The name of the default :ref:`domain <domains>`.  Can also be ``None`` to
+   disable a default domain.  The default is ``'py'``.
+
+   .. versionadded:: 1.0
+
 .. confval:: default_role
 
    .. index:: default; role
 
    The name of a reST role (builtin or Sphinx extension) to use as the default
    role, that is, for text marked up ```like this```.  This can be set to
-   ``'obj'`` to make ```filter``` a cross-reference to the function "filter".
-   The default is ``None``, which doesn't reassign the default role.
+   ``'py:obj'`` to make ```filter``` a cross-reference to the Python function
+   "filter".  The default is ``None``, which doesn't reassign the default role.
 
    The default role can always be set within individual documents using the
    standard reST :dir:`default-role` directive.
@@ -185,21 +217,19 @@
 
    .. versionadded:: 0.5
 
-.. confval:: modindex_common_prefix
+.. confval:: needs_sphinx
 
-   A list of prefixes that are ignored for sorting the module index (e.g.,
-   if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``, not
-   ``F``). This can be handy if you document a project that consists of a single
-   package.  Works only for the HTML builder currently.   Default is ``[]``.
+   If set to a ``major.minor`` version string like ``'1.1'``, Sphinx will
+   compare it with its version and refuse to build if it is too old.  Default is
+   no requirement.
 
-   .. versionadded:: 0.6
+   .. versionadded:: 1.0
 
-.. confval:: trim_doctest_flags
+.. confval:: nitpicky
 
-   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at
-   the ends of lines are removed for all code blocks showing interactive Python
-   sessions (i.e. doctests).  Default is true.  See the extension
-   :mod:`~sphinx.ext.doctest` for more possibilities of including doctests.
+   If true, Sphinx will warn about *all* references where the target cannot be
+   found.  Default is ``False``.  You can activate this mode temporarily using
+   the :option:`-n` command-line switch.
 
    .. versionadded:: 1.0
 
@@ -240,6 +270,7 @@
 
    Currently supported languages are:
 
+   * ``ca`` -- Catalan
    * ``cs`` -- Czech
    * ``de`` -- German
    * ``en`` -- English
@@ -280,9 +311,8 @@
 
 .. confval:: pygments_style
 
-   The style name to use for Pygments highlighting of source code.  Default is
-   ``'sphinx'``, which is a builtin style designed to match Sphinx' default
-   style.
+   The style name to use for Pygments highlighting of source code.  The default
+   style is selected by the theme for HTML output, and ``'sphinx'`` otherwise.
 
    .. versionchanged:: 0.3
       If the value is a fully-qualified name of a custom Pygments style class,
@@ -297,14 +327,24 @@
 .. confval:: add_module_names
 
    A boolean that decides whether module names are prepended to all
-   :term:`description unit` titles, e.g. for :dir:`function` directives.
-   Default is ``True``.
+   :term:`object` names (for object types where a "module" of some kind is
+   defined), e.g. for :dir:`function` directives.  Default is ``True``.
 
 .. confval:: show_authors
 
    A boolean that decides whether :dir:`moduleauthor` and :dir:`sectionauthor`
    directives produce any output in the built files.
 
+.. confval:: modindex_common_prefix
+
+   A list of prefixes that are ignored for sorting the Python module index
+   (e.g., if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``,
+   not ``F``). This can be handy if you document a project that consists of a
+   single package.  Works only for the HTML builder currently.  Default is
+   ``[]``.
+
+   .. versionadded:: 0.6
+
 .. confval:: trim_footnote_reference_space
 
    Trim spaces before footnote references that are necessary for the reST parser
@@ -312,6 +352,15 @@
 
    .. versionadded:: 0.6
 
+.. confval:: trim_doctest_flags
+
+   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at
+   the ends of lines are removed for all code blocks showing interactive Python
+   sessions (i.e. doctests).  Default is true.  See the extension
+   :mod:`~sphinx.ext.doctest` for more possibilities of including doctests.
+
+   .. versionadded:: 1.0
+
 
 .. _html-options:
 
@@ -398,6 +447,9 @@
    .. versionchanged:: 0.4
       The paths in :confval:`html_static_path` can now contain subdirectories.
 
+   .. versionchanged:: 1.0
+      The entries in :confval:`html_static_path` can now be single files.
+
 .. confval:: html_last_updated_fmt
 
    If this is not the empty string, a 'Last updated on:' timestamp is inserted
@@ -421,14 +473,53 @@
 .. confval:: html_sidebars
 
    Custom sidebar templates, must be a dictionary that maps document names to
-   template names.  Example::
+   template names.
+
+   The keys can contain glob-style patterns [1]_, in which case all matching
+   documents will get the specified sidebars.  (A warning is emitted when a
+   more than one glob-style pattern matches for any document.)
+
+   The values can be either lists or single strings.
+
+   * If a value is a list, it specifies the complete list of sidebar templates
+     to include.  If all or some of the default sidebars are to be included,
+     they must be put into this list as well.
+
+     The default sidebars (for documents that don't match any pattern) are:
+     ``['localtoc.html', 'relations.html', 'sourcelink.html',
+     'searchbox.html']``.
+
+   * If a value is a single string, it specifies a custom sidebar to be added
+     between the ``'sourcelink.html'`` and ``'searchbox.html'`` entries.  This
+     is for compatibility with Sphinx versions before 1.0.
+
+   Builtin sidebar templates that can be rendered are:
+
+   * **localtoc.html** -- a fine-grained table of contents of the current document
+   * **globaltoc.html** -- a coarse-grained table of contents for the whole
+     documentation set, collapsed
+   * **relations.html** -- two links to the previous and next documents
+   * **sourcelink.html** -- a link to the source of the current document, if
+     enabled in :confval:`html_show_sourcelink`
+   * **searchbox.html** -- the "quick search" box
+
+   Example::
 
       html_sidebars = {
-         'using/windows': 'windowssidebar.html'
+         '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],
+         'using/windows': ['windowssidebar.html', 'searchbox.html'],
       }
 
-   This will render the template ``windowssidebar.html`` within the sidebar of
-   the given document.
+   This will render the custom template ``windowssidebar.html`` and the quick
+   search box within the sidebar of the given document, and render the default
+   sidebars for all other pages (except that the local TOC is replaced by the
+   global TOC).
+
+   .. versionadded:: 1.0
+      The ability to use globbing keys and to specify multiple sidebars.
+
+   Note that this value only has no effect if the chosen theme does not possess
+   a sidebar, like the builtin **scrolls** and **haiku** themes.
 
 .. confval:: html_additional_pages
 
@@ -457,10 +548,25 @@
          ... old template content ...
          {% endblock %}
 
+.. confval:: html_domain_indices
+
+   If true, generate domain-specific indices in addition to the general index.
+   For e.g. the Python domain, this is the global module index.  Default is
+   ``True``.
+
+   This value can be a bool or a list of index names that should be generated.
+   To find out the index name for a specific index, look at the HTML file name.
+   For example, the Python module index has the name ``'py-modindex'``.
+
+   .. versionadded:: 1.0
+
 .. confval:: html_use_modindex
 
    If true, add a module index to the HTML documents.   Default is ``True``.
 
+   .. deprecated:: 1.0
+      Use :confval:`html_domain_indices`.
+
 .. confval:: html_use_index
 
    If true, add an index to the HTML documents.  Default is ``True``.
@@ -549,6 +655,102 @@
    Output file base name for HTML help builder.  Default is ``'pydoc'``.
 
 
+.. _epub-options:
+
+Options for epub output
+-----------------------
+
+These options influence the epub output.  As this builder derives from the HTML
+builder, the HTML options also apply where appropriate.  The actual values for
+some of the options is not really important, they just have to be entered into
+the `Dublin Core metadata <http://dublincore.org/>`_.
+
+.. confval:: epub_basename
+
+   The basename for the epub file.  It defaults to the :confval:`project` name.
+
+.. confval:: epub_theme
+
+   The HTML theme for the epub output.  Since the default themes are not
+   optimized for small screen space, using the same theme for HTML and epub
+   output is usually not wise.  This defaults to ``'epub'``, a theme designed to
+   save visual space.
+
+.. confval:: epub_title
+
+   The title of the document.  It defaults to the :confval:`html_title` option
+   but can be set independently for epub creation.
+
+.. confval:: epub_author
+
+   The author of the document.  This is put in the Dublin Core metadata.  The
+   default value is ``'unknown'``.
+
+.. confval:: epub_language
+
+   The language of the document.  This is put in the Dublin Core metadata.  The
+   default is the :confval:`language` option or ``'en'`` if unset.
+
+.. confval:: epub_publisher
+
+   The publisher of the document.  This is put in the Dublin Core metadata.  You
+   may use any sensible string, e.g. the project homepage.  The default value is
+   ``'unknown'``.
+
+.. confval:: epub_copyright
+
+   The copyright of the document.  It defaults to the :confval:`copyright`
+   option but can be set independently for epub creation.
+
+.. confval:: epub_identifier
+
+   An identifier for the document.  This is put in the Dublin Core metadata.
+   For published documents this is the ISBN number, but you can also use an
+   alternative scheme, e.g. the project homepage.  The default value is
+   ``'unknown'``.
+
+.. confval:: epub_scheme
+
+   The publication scheme for the :confval:`epub_identifier`.  This is put in
+   the Dublin Core metadata.  For published books the scheme is ``'ISBN'``.  If
+   you use the project homepage, ``'URL'`` seems reasonable.  The default value
+   is ``'unknown'``.
+
+.. confval:: epub_uid
+
+   A unique identifier for the document.  This is put in the Dublin Core
+   metadata.  You may use a random string.  The default value is ``'unknown'``.
+
+.. confval:: epub_pre_files
+
+   Additional files that should be inserted before the text generated by
+   Sphinx. It is a list of tuples containing the file name and the title.
+   Example::
+
+      epub_pre_files = [
+          ('index.html', 'Welcome'),
+      ]
+
+   The default value is ``[]``.
+
+.. confval:: epub_post_files
+
+   Additional files that should be inserted after the text generated by Sphinx.
+   It is a list of tuples containing the file name and the title.  The default
+   value is ``[]``.
+
+.. confval:: epub_exclude_files
+
+   A list of files that are generated/copied in the build directory but should
+   not be included in the epub file.  The default value is ``[]``.
+
+.. confval:: epub_tocdepth
+
+   The depth of the table of contents in the file :file:`toc.ncx`.  It should
+   be an integer greater than zero.  The default value is 3.  Note: A deeply
+   nested table of contents may be difficult to navigate.
+
+
 .. _latex-options:
 
 Options for LaTeX output
@@ -602,10 +804,24 @@
 
    A list of document names to append as an appendix to all manuals.
 
+.. confval:: latex_domain_indices
+
+   If true, generate domain-specific indices in addition to the general index.
+   For e.g. the Python domain, this is the global module index.  Default is
+   ``True``.
+
+   This value can be a bool or a list of index names that should be generated,
+   like for :confval:`html_domain_indices`.
+
+   .. versionadded:: 1.0
+
 .. confval:: latex_use_modindex
 
    If true, add a module index to LaTeX documents.   Default is ``True``.
 
+   .. deprecated:: 1.0
+      Use :confval:`latex_domain_indices`.
+
 .. confval:: latex_elements
 
    .. versionadded:: 0.5
@@ -672,9 +888,7 @@
      ``'logo'``
      ``'releasename'``
      ``'makeindex'``
-     ``'makemodindex'``
      ``'shorthandoff'``
-     ``'printmodindex'``
 
 .. confval:: latex_docclass
 
@@ -717,3 +931,42 @@
 
    .. deprecated:: 0.5
       Use the ``'pointsize'`` key in the :confval:`latex_elements` value.
+
+
+.. _man-options:
+
+Options for manual page output
+------------------------------
+
+These options influence manual page output.
+
+.. confval:: man_pages
+
+   This value determines how to group the document tree into manual pages.  It
+   must be a list of tuples ``(startdocname, name, description, authors,
+   section)``, where the items are:
+
+   * *startdocname*: document name that is the "root" of the manual page.  All
+     documents referenced by it in TOC trees will be included in the manual file
+     too.  (If you want one master manual page, use your :confval:`master_doc`
+     here.)
+   * *name*: name of the manual page.  This should be a short string without
+     spaces or special characters.  It is used to determine the file name as
+     well as the name of the manual page (in the NAME section).
+   * *description*: description of the manual page.  This is used in the NAME
+     section.
+   * *authors*: A list of strings with authors, or a single string.  Can be
+     an empty string or list if you do not want to automatically generate
+     an AUTHORS section in the manual page.
+   * *section*: The manual page section.  Used for the output file name as well
+     as in the manual page header.
+
+   .. versionadded:: 1.0
+
+
+.. rubric:: Footnotes
+
+.. [1] A note on available globbing syntax: you can use the standard shell
+       constructs ``*``, ``?``, ``[...]`` and ``[!...]`` with the feature that
+       these all don't match slashes.  A double star ``**`` can be used to match
+       any sequence of characters *including* slashes.
diff -ur doc-0.6.3/contents.rst doc/contents.rst
--- doc-0.6.3/contents.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/contents.rst	2010-03-01 09:28:22.000000000 +0900
@@ -7,9 +7,11 @@
    :maxdepth: 2
 
    intro
-   concepts
+   tutorial
+   invocation
    rest
    markup/index
+   domains
    builders
    config
    theming
Only in doc: domains.rst
diff -ur doc-0.6.3/ext/appapi.rst doc/ext/appapi.rst
--- doc-0.6.3/ext/appapi.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/appapi.rst	2010-04-10 17:23:07.000000000 +0900
@@ -43,22 +43,46 @@
       ``'env'``) to a string.  However, booleans are still accepted and
       converted internally.
 
+.. method:: Sphinx.add_domain(domain)
+
+   Make the given *domain* (which must be a class; more precisely, a subclass of
+   :class:`~sphinx.domains.Domain`) known to Sphinx.
+
+   .. versionadded:: 1.0
+
+.. method:: Sphinx.override_domain(domain)
+
+   Make the given *domain* class known to Sphinx, assuming that there is already
+   a domain with its ``.name``.  The new domain must be a subclass of the
+   existing one.
+
+   .. versionadded:: 1.0
+
+.. method:: Sphinx.add_index_to_domain(domain, index)
+
+   Add a custom *index* class to the domain named *domain*.  *index* must be a
+   subclass of :class:`~sphinx.domains.Index`.
+
+   .. versionadded:: 1.0
+
 .. method:: Sphinx.add_event(name)
 
-   Register an event called *name*.
+   Register an event called *name*.  This is needed to be able to emit it.
 
 .. method:: Sphinx.add_node(node, **kwds)
 
    Register a Docutils node class.  This is necessary for Docutils internals.
    It may also be used in the future to validate nodes in the parsed documents.
 
-   Node visitor functions for the Sphinx HTML, LaTeX and text writers can be
-   given as keyword arguments: the keyword must be one or more of ``'html'``,
-   ``'latex'``, ``'text'``, the value a 2-tuple of ``(visit, depart)`` methods.
-   ``depart`` can be ``None`` if the ``visit`` function raises
-   :exc:`docutils.nodes.SkipNode`.  Example::
+   Node visitor functions for the Sphinx HTML, LaTeX, text and manpage writers
+   can be given as keyword arguments: the keyword must be one or more of
+   ``'html'``, ``'latex'``, ``'text'``, ``'man'``, the value a 2-tuple of
+   ``(visit, depart)`` methods.  ``depart`` can be ``None`` if the ``visit``
+   function raises :exc:`docutils.nodes.SkipNode`.  Example:
+
+   .. code-block:: python
 
-      class math(docutils.nodes.Element)
+      class math(docutils.nodes.Element): pass
 
       def visit_math_html(self, node):
           self.body.append(self.starttag(node, 'math'))
@@ -79,10 +103,10 @@
    Register a Docutils directive.  *name* must be the prospective directive
    name.  There are two possible ways to write a directive:
 
-   * In the docutils 0.4 style, *func* is the directive function.  *content*,
+   * In the docutils 0.4 style, *obj* is the directive function.  *content*,
      *arguments* and *options* are set as attributes on the function and
      determine whether the directive has content, arguments and options,
-     respectively.
+     respectively.  **This style is deprecated.**
 
    * In the docutils 0.5 style, *directiveclass* is the directive class.  It
      must already have attributes named *has_content*, *required_arguments*,
@@ -98,7 +122,9 @@
      support directive classes otherwise).
 
    For example, the (already existing) :dir:`literalinclude` directive would be
-   added like this::
+   added like this:
+
+   .. code-block:: python
 
       from docutils.parsers.rst import directives
       add_directive('literalinclude', literalinclude_directive,
@@ -110,12 +136,26 @@
    .. versionchanged:: 0.6
       Docutils 0.5-style directive classes are now supported.
 
+.. method:: Sphinx.add_directive_to_domain(domain, name, func, content, arguments, **options)
+            Sphinx.add_directive_to_domain(domain, name, directiveclass)
+
+   Like :meth:`add_directive`, but the directive is added to the domain named
+   *domain*.
+
+   .. versionadded:: 1.0
+
 .. method:: Sphinx.add_role(name, role)
 
    Register a Docutils role.  *name* must be the role name that occurs in the
    source, *role* the role function (see the `Docutils documentation
    <http://docutils.sourceforge.net/docs/howto/rst-roles.html>`_ on details).
 
+.. method:: Sphinx.add_role_to_domain(domain, name, role)
+
+   Like :meth:`add_role`, but the role is added to the domain named *domain*.
+
+   .. versionadded:: 1.0
+
 .. method:: Sphinx.add_generic_role(name, nodeclass)
 
    Register a Docutils role that does nothing but wrap its contents in the
@@ -123,26 +163,28 @@
 
    .. versionadded:: 0.6
 
-.. method:: Sphinx.add_description_unit(directivename, rolename, indextemplate='', parse_node=None, ref_nodeclass=None)
+.. method:: Sphinx.add_object_type(directivename, rolename, indextemplate='', parse_node=None, ref_nodeclass=None, objname='')
 
-   This method is a very convenient way to add a new type of information that
+   This method is a very convenient way to add a new :term:`object` type that
    can be cross-referenced.  It will do this:
 
-   * Create a new directive (called *directivename*) for a :term:`description
-     unit`.  It will automatically add index entries if *indextemplate* is
-     nonempty; if given, it must contain exactly one instance of ``%s``.  See
-     the example below for how the template will be interpreted.
+   * Create a new directive (called *directivename*) for documenting an object.
+     It will automatically add index entries if *indextemplate* is nonempty; if
+     given, it must contain exactly one instance of ``%s``.  See the example
+     below for how the template will be interpreted.
    * Create a new role (called *rolename*) to cross-reference to these
-     description units.
+     object descriptions.
    * If you provide *parse_node*, it must be a function that takes a string and
      a docutils node, and it must populate the node with children parsed from
      the string.  It must then return the name of the item to be used in
-     cross-referencing and index entries.  See the :file:`ext.py` file in the
+     cross-referencing and index entries.  See the :file:`conf.py` file in the
      source for this documentation for an example.
+   * The *objname* (if not given, will default to *directivename*) names the
+     type of object.  It is used when listing objects, e.g. in search results.
 
    For example, if you have this call in a custom Sphinx extension::
 
-      app.add_description_unit('directive', 'dir', 'pair: %s; directive')
+      app.add_object_type('directive', 'dir', 'pair: %s; directive')
 
    you can use this markup in your documents::
 
@@ -164,12 +206,15 @@
    ``docutils.nodes.emphasis`` or ``docutils.nodes.strong`` -- you can also use
    ``docutils.nodes.generated`` if you want no further text decoration).
 
-   For the role content, you have the same options as for standard Sphinx roles
-   (see :ref:`xref-syntax`).
+   For the role content, you have the same syntactical possibilities as for
+   standard Sphinx roles (see :ref:`xref-syntax`).
+
+   This method is also available under the deprecated alias
+   :meth:`add_description_unit`.
 
-.. method:: Sphinx.add_crossref_type(directivename, rolename, indextemplate='', ref_nodeclass=None)
+.. method:: Sphinx.add_crossref_type(directivename, rolename, indextemplate='', ref_nodeclass=None, objname='')
 
-   This method is very similar to :meth:`add_description_unit` except that the
+   This method is very similar to :meth:`add_object_type` except that the
    directive it generates must be empty, and will produce no output.
 
    That means that you can add semantic targets to your sources, and refer to
@@ -260,11 +305,18 @@
 .. method:: Sphinx.emit_firstresult(event, *arguments)
 
    Emit *event* and pass *arguments* to the callback functions.  Return the
-   result of the first callback that doesn't return ``None`` (and don't call
-   the rest of the callbacks).
+   result of the first callback that doesn't return ``None``.
 
    .. versionadded:: 0.5
 
+.. method:: Sphinx.require_sphinx(version)
+
+   Compare *version* (which must be a ``major.minor`` version string,
+   e.g. ``'1.1'``) with the version of the running Sphinx, and abort the build
+   when it is too old.
+
+   .. versionadded:: 1.0
+
 
 .. exception:: ExtensionError
 
@@ -351,7 +403,15 @@
 
    .. versionadded:: 0.5
 
-.. event:: page-context (app, pagename, templatename, context, doctree)
+.. event:: html-collect-pages (app)
+
+   Emitted when the HTML builder is starting to write non-document pages.  You
+   can add pages to write by returning an iterable from this event consisting of
+   ``(pagename, context, templatename)``.
+
+   .. versionadded:: 1.0
+
+.. event:: html-page-context (app, pagename, templatename, context, doctree)
 
    Emitted when the HTML builder has created a context dictionary to render a
    template with -- this can be used to add custom elements to the context.
@@ -390,3 +450,19 @@
 
 .. autoclass:: TemplateBridge
    :members:
+
+
+.. _domain-api:
+
+Domain API
+----------
+
+.. module:: sphinx.domains
+
+.. autoclass:: Domain
+   :members:
+
+.. autoclass:: ObjType
+
+.. autoclass:: Index
+   :members:
diff -ur doc-0.6.3/ext/autodoc.rst doc/ext/autodoc.rst
--- doc-0.6.3/ext/autodoc.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/autodoc.rst	2010-04-10 17:23:07.000000000 +0900
@@ -89,6 +89,9 @@
         .. autoclass:: Noodle
            :members: eat, slurp
 
+   * If you want to make the ``members`` option the default, see
+     :confval:`autodoc_default_flags`.
+
    * Members without docstrings will be left out, unless you give the
      ``undoc-members`` flag option::
 
@@ -223,10 +226,34 @@
 .. confval:: autodoc_member_order
 
    This value selects if automatically documented members are sorted
-   alphabetical (value ``'alphabetical'``) or by member type (value
-   ``'groupwise'``).  The default is alphabetical.
+   alphabetical (value ``'alphabetical'``), by member type (value
+   ``'groupwise'``) or by source order (value ``'bysource'``).  The default is
+   alphabetical.
+
+   Note that for source order, the module must be a Python module with the
+   source code available.
 
    .. versionadded:: 0.6
+   .. versionchanged:: 1.0
+      Support for ``'bysource'``.
+
+.. confval:: autodoc_default_flags
+
+   This value is a list of autodoc directive flags that should be automatically
+   applied to all autodoc directives.  The supported flags are ``'members'``,
+   ``'undoc-members'``, ``'inherited-members'`` and ``'show-inheritance'``.
+
+   If you set one of these flags in this config value, you can use a negated
+   form, :samp:`'no-{flag}'`, in an autodoc directive, to disable it once.
+   For example, if ``autodoc_default_flags`` is set to ``['members',
+   'undoc-members']``, and you write a directive like this::
+
+      .. automodule:: foo
+         :no-undoc-members:
+
+   the directive will be interpreted as if only ``:members:`` was given.
+
+   .. versionadded:: 1.0
 
 
 Docstring preprocessing
diff -ur doc-0.6.3/ext/autosummary.rst doc/ext/autosummary.rst
--- doc-0.6.3/ext/autosummary.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/autosummary.rst	2010-03-01 09:28:22.000000000 +0900
@@ -97,6 +97,8 @@
      :confval:`templates_path` to generate the pages for all entries
      listed. See `Customizing templates`_ below.
 
+     .. versionadded:: 1.0
+
 
 :program:`sphinx-autogen` -- generate autodoc stub pages
 --------------------------------------------------------
@@ -142,6 +144,8 @@
 Customizing templates
 ---------------------
 
+.. versionadded:: 1.0
+
 You can customize the stub page templates, in a similar way as the HTML Jinja
 templates, see :ref:`templating`. (:class:`~sphinx.application.TemplateBridge`
 is not supported.)
@@ -163,6 +167,8 @@
 
 The following variables available in the templates:
 
+.. currentmodule:: None
+
 .. data:: name
 
    Name of the documented object, excluding the module and class parts.
@@ -214,12 +220,12 @@
    List containing names of "public" methods in the class.  Only available for
    classes.
 
-.. data:: methods
+.. data:: attributes
 
    List containing names of "public" attributes in the class.  Only available
    for classes.
 
 .. note::
-   
+
    You can use the :dir:`autosummary` directive in the stub pages.
    Stub pages are generated also based on these directives.
diff -ur doc-0.6.3/ext/builderapi.rst doc/ext/builderapi.rst
--- doc-0.6.3/ext/builderapi.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/builderapi.rst	2010-03-01 09:28:22.000000000 +0900
@@ -13,7 +13,6 @@
 
    These methods are predefined and will be called from the application:
 
-   .. automethod:: load_env
    .. automethod:: get_relative_uri
    .. automethod:: build_all
    .. automethod:: build_specific
diff -ur doc-0.6.3/ext/doctest.rst doc/ext/doctest.rst
--- doc-0.6.3/ext/doctest.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/doctest.rst	2010-03-01 09:28:22.000000000 +0900
@@ -87,10 +87,30 @@
    * ``hide``, a flag option, hides the code block in other builders.  By
      default it is shown as a highlighted code block.
 
+   .. note::
+
+      Code in a ``testcode`` block is always executed all at once, no matter how
+      many statements it contains.  Therefore, output will *not* be generated
+      for bare expressions -- use ``print``.  Example::
+
+          .. testcode::
+
+             1+1        # this will give no output!
+             print 2+2  # this will give output
+
+          .. testoutput::
+
+             4
+
+      Also, please be aware that since the doctest module does not support
+      mixing regular output and an exception message in the same snippet, this
+      applies to testcode/testoutput as well.
+
 
 .. directive:: .. testoutput:: [group]
 
-   The corresponding output for the last :dir:`testcode` block.
+   The corresponding output, or the exception message, for the last
+   :dir:`testcode` block.
 
    This directive supports two options:
 
@@ -102,6 +122,10 @@
 
    Example::
 
+      .. testcode::
+
+         print 'Output     text.'
+
       .. testoutput::
          :hide:
          :options: -ELLIPSIS, +NORMALIZE_WHITESPACE
@@ -111,7 +135,7 @@
 
 The following is an example for the usage of the directives.  The test via
 :dir:`doctest` and the test via :dir:`testcode` and :dir:`testoutput` are
-completely equivalent. ::
+equivalent. ::
 
    The parrot module
    =================
diff -ur doc-0.6.3/ext/extlinks.rst doc/ext/extlinks.rst
--- doc-0.6.3/ext/extlinks.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/extlinks.rst	2010-03-01 09:28:22.000000000 +0900
@@ -27,11 +27,13 @@
    short alias names to a base URL and a *prefix*.  For example, to create an
    alias for the above mentioned issues, you would add ::
 
-      extlinks = {'issue': ('http://bitbucket.org/birkenfeld/sphinx/issue/',
+      extlinks = {'issue': ('http://bitbucket.org/birkenfeld/sphinx/issue/%s',
                             'issue ')}
 
    Now, you can use the alias name as a new role, e.g. ``:issue:`123```.  This
    then inserts a link to http://bitbucket.org/birkenfeld/sphinx/issue/123.
+   As you can see, the target given in the role is substituted in the base URL
+   in the place of ``%s``.
 
    The link *caption* depends on the second item in the tuple, the *prefix*:
 
@@ -45,3 +47,8 @@
    You can also use the usual "explicit title" syntax supported by other roles
    that generate links, i.e. ``:issue:`this issue <123>```.  In this case, the
    *prefix* is not relevant.
+
+.. note::
+
+   Since links are generated from the role in the reading stage, they appear as
+   ordinary links to e.g. the ``linkcheck`` builder.
diff -ur doc-0.6.3/ext/graphviz.rst doc/ext/graphviz.rst
--- doc-0.6.3/ext/graphviz.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/graphviz.rst	2010-03-01 09:28:22.000000000 +0900
@@ -25,8 +25,9 @@
             "bar" -> "baz";
          }
 
-   In HTML output, the code will be rendered to a PNG image.  In LaTeX output,
-   the code will be rendered to an embeddable PDF file.
+   In HTML output, the code will be rendered to a PNG or SVG image (see
+   :confval:`graphviz_output_format`).  In LaTeX output, the code will be
+   rendered to an embeddable PDF file.
 
 
 .. directive:: graph
@@ -55,6 +56,12 @@
          "bar" -> "baz" -> "quux";
 
 
+.. versionadded:: 1.0
+   All three directives support an ``alt`` option that determines the image's
+   alternate text for HTML output.  If not given, the alternate text defaults to
+   the graphviz code.
+
+
 There are also these new config values:
 
 .. confval:: graphviz_dot
@@ -75,3 +82,11 @@
    Additional command-line arguments to give to dot, as a list.  The default is
    an empty list.  This is the right place to set global graph, node or edge
    attributes via dot's ``-G``, ``-N`` and ``-E`` options.
+
+.. confval:: graphviz_output_format
+
+   The output format for Graphviz when building HTML files.  This must be either
+   ``'png'`` or ``'svg'``; the default is ``'png'``.
+
+   .. versionadded:: 1.0
+      Previously, output always was PNG.
diff -ur doc-0.6.3/ext/inheritance.rst doc/ext/inheritance.rst
--- doc-0.6.3/ext/inheritance.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/inheritance.rst	2010-03-01 09:28:22.000000000 +0900
@@ -37,10 +37,20 @@
 
    A dictionary of graphviz graph attributes for inheritance diagrams.
 
+   For example::
+
+      inheritance_graph_attrs = dict(rankdir="LR", size='"6.0, 8.0"',
+                                     fontsize=14, ratio='compress')
+
 .. confval:: inheritance_node_attrs
 
    A dictionary of graphviz node attributes for inheritance diagrams.
 
+   For example::
+
+      inheritance_node_attrs = dict(shape='ellipse', fontsize=14, height=0.75,
+                                    color='dodgerblue1', style='filled')
+
 .. confval:: inheritance_edge_attrs
 
    A dictionary of graphviz edge attributes for inheritance diagrams.
diff -ur doc-0.6.3/ext/math.rst doc/ext/math.rst
--- doc-0.6.3/ext/math.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/math.rst	2010-03-01 09:28:22.000000000 +0900
@@ -191,10 +191,10 @@
    JSMath.  There is no default.
 
    The path can be absolute or relative; if it is relative, it is relative to
-   the root of the built docs.
+   the ``_static`` directory of the built docs.
 
    For example, if you put JSMath into the static path of the Sphinx docs, this
-   value would be ``_static/jsMath/easy/load.js``.  If you host more than one
+   value would be ``jsMath/easy/load.js``.  If you host more than one
    Sphinx documentation set on one server, it is advisable to install jsMath in
    a shared location.
 
diff -ur doc-0.6.3/ext/tutorial.rst doc/ext/tutorial.rst
--- doc-0.6.3/ext/tutorial.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/ext/tutorial.rst	2010-03-01 09:28:22.000000000 +0900
@@ -201,8 +201,7 @@
        def run(self):
            env = self.state.document.settings.env
 
-           targetid = "todo-%s" % env.index_num
-           env.index_num += 1
+           targetid = "todo-%s" % env.new_serialno('todo')
            targetnode = nodes.target('', '', ids=[targetid])
 
            ad = make_admonition(todo, self.name, [_('Todo')], self.options,
@@ -225,9 +224,10 @@
 
 Then, to act as a link target (from the todolist), the todo directive needs to
 return a target node in addition to the todo node.  The target ID (in HTML, this
-will be the anchor name) is generated by using ``env.index_num`` which is
-persistent between directive calls and therefore leads to unique target names.
-The target node is instantiated without any text (the first two arguments).
+will be the anchor name) is generated by using ``env.new_serialno`` which is
+returns a new integer directive on each call and therefore leads to unique
+target names.  The target node is instantiated without any text (the first two
+arguments).
 
 An admonition is created using a standard docutils function (wrapped in Sphinx
 for docutils cross-version compatibility).  The first argument gives the node
Only in doc/ext: viewcode.rst
diff -ur doc-0.6.3/extensions.rst doc/extensions.rst
--- doc-0.6.3/extensions.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/extensions.rst	2010-03-01 09:28:22.000000000 +0900
@@ -52,6 +52,7 @@
    ext/coverage
    ext/todo
    ext/extlinks
+   ext/viewcode
 
 
 Third-party extensions
@@ -61,8 +62,8 @@
 distribution.  The `Wiki at BitBucket`_ maintains a list of those.
 
 If you write an extension that you think others will find useful, please write
-to the project mailing list (sphinx-dev@googlegroups.com) and we'll find the
-proper way of including or hosting it for the public.
+to the project mailing list (`join here <http://groups.google.com/group/sphinx-dev>`_)
+and we'll find the proper way of including or hosting it for the public.
 
 .. _Wiki at BitBucket: http://www.bitbucket.org/birkenfeld/sphinx/wiki/Home
 
diff -ur doc-0.6.3/faq.rst doc/faq.rst
--- doc-0.6.3/faq.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/faq.rst	2010-03-01 09:28:22.000000000 +0900
@@ -9,6 +9,11 @@
 How do I...
 -----------
 
+... create PDF files without LaTeX?
+   You can use `rst2pdf <http://rst2pdf.googlecode.com>`_ version 0.12 or greater
+   which comes with built-in Sphinx integration.  See the :ref:`builders`
+   section for details.
+
 ... get section numbers?
    They are automatic in LaTeX output; for HTML, give a ``:numbered:`` option to
    the :dir:`toctree` directive where you want to start numbering.
@@ -19,6 +24,10 @@
 ... add global substitutions or includes?
    Add them in the :confval:`rst_epilog` config value.
 
+... display the whole TOC tree in the sidebar?
+   Use the :data:`toctree` callable in a custom layout template, probably in the
+   ``sidebartoc`` block.
+
 ... write my own extension?
    See the :ref:`extension tutorial <exttut>`.
 
@@ -28,6 +37,8 @@
    come through cleanly.
 
 
+.. _usingwith:
+
 Using Sphinx with...
 --------------------
 
@@ -43,11 +54,87 @@
    Glenn Hutchings has written a SCons build script to build Sphinx
    documentation; it is hosted here: http://bitbucket.org/zondo/sphinx-scons
 
+PyPI
+   Jannis Leidel wrote a `setuptools command
+   <http://pypi.python.org/pypi/Sphinx-PyPI-upload>`_ that automatically uploads
+   Sphinx documentation to the PyPI package documentation area at
+   http://packages.python.org/.
+
 github pages
    You can use `Michael Jones' sphinx-to-github tool
    <http://github.com/michaeljones/sphinx-to-github/tree/master>`_ to prepare
    Sphinx HTML output.
 
+Google Analytics
+   You can use a custom ``layout.html`` template, like this:
+
+   .. code-block:: html+django
+
+      {% extends "!layout.html" %}
+
+      {%- block extrahead %}
+      {{ super() }}
+      <script type="text/javascript">
+        var _gaq = _gaq || [];
+        _gaq.push(['_setAccount', 'XXX account number XXX']);
+        _gaq.push(['_trackPageview']);
+      </script>
+      {% endblock %}
+
+      {% block footer %}
+      {{ super() }}
+      <div class="footer">This page uses <a href="http://analytics.google.com/">
+      Google Analytics</a> to collect statistics. You can disable it by blocking
+      the JavaScript coming from www.google-analytics.com.
+      <script type="text/javascript">
+        (function() {
+          var ga = document.createElement('script');
+          ga.src = ('https:' == document.location.protocol ?
+                    'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
+          ga.setAttribute('async', 'true');
+          document.documentElement.firstChild.appendChild(ga);
+        })();
+      </script>
+      </div>
+      {% endblock %}
+
 
 .. _api role: http://git.savannah.gnu.org/cgit/kenozooid.git/tree/doc/extapi.py
 .. _xhtml to reST: http://docutils.sourceforge.net/sandbox/xhtml2rest/xhtml2rest.py
+
+
+.. _epub-faq:
+
+Epub info
+---------
+
+The epub builder is currently in an experimental stage.  It has only been tested
+with the Sphinx documentation itself.  If you want to create epubs, here are
+some notes:
+
+* Split the text into several files. The longer the individual HTML files are,
+  the longer it takes the ebook reader to render them.  In extreme cases, the
+  rendering can take up to one minute.
+
+* Try to minimize the markup.  This also pays in rendering time.
+
+* For some readers you can use embedded or external fonts using the CSS
+  ``@font-face`` directive.  This is *extremely* useful for code listings which
+  are often cut at the right margin.  The default Courier font (or variant) is
+  quite wide and you can only display up to 60 characters on a line.  If you
+  replace it with a narrower font, you can get more characters on a line.  You
+  may even use `FontForge <http://fontforge.sourceforge.net/>`_ and create
+  narrow variants of some free font.  In my case I get up to 70 characters on a
+  line.
+
+  You may have to experiment a little until you get reasonable results.
+
+* Test the created epubs. You can use several alternatives.  The ones I am aware
+  of are Epubcheck_, Calibre_, FBreader_ (although it does not render the CSS),
+  and Bookworm_.  For bookworm you can download the source from
+  http://code.google.com/p/threepress/ and run your own local server.
+
+.. _Epubcheck: http://code.google.com/p/epubcheck/
+.. _Calibre: http://calibre-ebook.com/
+.. _FBreader: http://www.fbreader.org/
+.. _Bookworm: http://bookworm.oreilly.com/
diff -ur doc-0.6.3/glossary.rst doc/glossary.rst
--- doc-0.6.3/glossary.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/glossary.rst	2010-03-01 09:28:22.000000000 +0900
@@ -19,10 +19,43 @@
       the :term:`source directory`, but can be set differently with the **-c**
       command-line option.
 
-   description unit
-      The basic building block of Sphinx documentation.  Every "description
-      directive" (e.g. :dir:`function` or :dir:`describe`) creates such a unit;
-      and most units can be cross-referenced to.
+   directive
+      A reStructuredText markup element that allows marking a block of content
+      with special meaning.  Directives are supplied not only by docutils, but
+      Sphinx and custom extensions can add their own.  The basic directive
+      syntax looks like this::
+
+         .. directivename:: argument ...
+            :option: value
+
+            Content of the directive.
+
+      See :ref:`directives` for more information.
+
+   document name
+      Since reST source files can have different extensions (some people like
+      ``.txt``, some like ``.rst`` -- the extension can be configured with
+      :confval:`source_suffix`) and different OSes have different path separators,
+      Sphinx abstracts them: :dfn:`document names` are always relative to the
+      :term:`source directory`, the extension is stripped, and path separators
+      are converted to slashes.  All values, parameters and such referring to
+      "documents" expect such document names.
+
+      Examples for document names are ``index``, ``library/zipfile``, or
+      ``reference/datamodel/types``.  Note that there is no leading or trailing
+      slash.
+
+   domain
+      A domain is a collection of markup (reStructuredText :term:`directive`\ s
+      and :term:`role`\ s) to describe and link to :term:`object`\ s belonging
+      together, e.g. elements of a programming language.  Directive and role
+      names in a domain have names like ``domain:name``, e.g. ``py:function``.
+
+      Having domains means that there are no naming problems when one set of
+      documentation wants to refer to e.g. C++ and Python classes.  It also
+      means that extensions that support the documentation of whole new
+      languages are much easier to write.  For more information about domains,
+      see the chapter :ref:`domains`.
 
    environment
       A structure where information about all documents under the root is saved,
@@ -30,6 +63,19 @@
       parsing stage, so that successive runs only need to read and parse new and
       changed documents.
 
+   master document
+      The document that contains the root :dir:`toctree` directive.
+
+   object
+      The basic building block of Sphinx documentation.  Every "object
+      directive" (e.g. :dir:`function` or :dir:`object`) creates such a block;
+      and most objects can be cross-referenced to.
+
+   role
+      A reStructuredText markup element that allows marking a piece of text.
+      Like directives, roles are extensible.  The basic syntax looks like this:
+      ``:rolename:`content```.  See :ref:`inlinemarkup` for details.
+
    source directory
       The directory which, including its subdirectories, contains all source
       files for one Sphinx project.
diff -ur doc-0.6.3/intro.rst doc/intro.rst
--- doc-0.6.3/intro.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/intro.rst	2010-04-10 17:23:07.000000000 +0900
@@ -11,9 +11,9 @@
 LaTeX file that you can compile into a PDF version of the documents.
 
 The focus is on hand-written documentation, rather than auto-generated API docs.
-Though there is limited support for that kind of docs as well (which is intended
-to be freely mixed with hand-written content), if you need pure API docs have a
-look at `Epydoc <http://epydoc.sf.net/>`_, which also understands reST.
+Though there is support for that kind of docs as well (which is intended to be
+freely mixed with hand-written content), if you need pure API docs have a look
+at `Epydoc <http://epydoc.sf.net/>`_, which also understands reST.
 
 
 Conversion from other systems
@@ -35,6 +35,12 @@
   markup; it is at `Google Code <http://code.google.com/p/db2rst/>`_.
 
 
+Use with other systems
+----------------------
+
+See the :ref:`pertinent section in the FAQ list <usingwith>`.
+
+
 Prerequisites
 -------------
 
@@ -47,113 +53,8 @@
 .. _Pygments: http://pygments.org
 
 
-Setting up the documentation sources
-------------------------------------
-
-The root directory of a documentation collection is called the :dfn:`source
-directory`.  Normally, this directory also contains the Sphinx configuration
-file :file:`conf.py`, but that file can also live in another directory, the
-:dfn:`configuration directory`.
-
-.. versionadded:: 0.3
-   Support for a different configuration directory.
-
-Sphinx comes with a script called :program:`sphinx-quickstart` that sets up a
-source directory and creates a default :file:`conf.py` from a few questions it
-asks you.  Just run ::
-
-   $ sphinx-quickstart
-
-and answer the questions.
-
-
-Running a build
----------------
-
-A build is started with the :program:`sphinx-build` script.  It is called
-like this::
-
-     $ sphinx-build -b latex sourcedir builddir
-
-where *sourcedir* is the :term:`source directory`, and *builddir* is the
-directory in which you want to place the built documentation (it must be an
-existing directory).  The :option:`-b` option selects a builder; in this example
-Sphinx will build LaTeX files.
-
-The :program:`sphinx-build` script has several more options:
-
-**-a**
-   If given, always write all output files.  The default is to only write output
-   files for new and changed source files.  (This may not apply to all
-   builders.)
-
-**-E**
-   Don't use a saved :term:`environment` (the structure caching all
-   cross-references), but rebuild it completely.  The default is to only read
-   and parse source files that are new or have changed since the last run.
-
-**-t** *tag*
-   Define the tag *tag*.  This is relevant for :dir:`only` directives that only
-   include their content if this tag is set.
-
-   .. versionadded:: 0.6
-
-**-d** *path*
-   Since Sphinx has to read and parse all source files before it can write an
-   output file, the parsed source files are cached as "doctree pickles".
-   Normally, these files are put in a directory called :file:`.doctrees` under
-   the build directory; with this option you can select a different cache
-   directory (the doctrees can be shared between all builders).
-
-**-c** *path*
-   Don't look for the :file:`conf.py` in the source directory, but use the given
-   configuration directory instead.  Note that various other files and paths
-   given by configuration values are expected to be relative to the
-   configuration directory, so they will have to be present at this location
-   too.
-
-   .. versionadded:: 0.3
-
-**-C**
-   Don't look for a configuration file; only take options via the ``-D`` option.
-
-   .. versionadded:: 0.5
-
-**-D** *setting=value*
-   Override a configuration value set in the :file:`conf.py` file.  The value
-   must be a string or dictionary value.  For the latter, supply the setting
-   name and key like this: ``-D latex_elements.docclass=scrartcl``.
-
-   .. versionchanged:: 0.6
-      The value can now be a dictionary value.
-
-**-A** *name=value*
-   Make the *name* assigned to *value* in the HTML templates.
-
-**-N**
-   Do not do colored output.  (On Windows, colored output is disabled in any
-   case.)
-
-**-q**
-   Do not output anything on standard output, only write warnings and errors to
-   standard error.
-
-**-Q**
-   Do not output anything on standard output, also suppress warnings.  Only
-   errors are written to standard error.
-
-**-w** *file*
-   Write warnings (and errors) to the given file, in addition to standard error.
-
-**-W**
-   Turn warnings into errors.  This means that the build stops at the first
-   warning and ``sphinx-build`` exits with exit status 1.
-
-**-P**
-   (Useful for debugging only.)  Run the Python debugger, :mod:`pdb`, if an
-   unhandled exception occurs while building.
-
+Usage
+-----
 
-You can also give one or more filenames on the command line after the source and
-build directories.  Sphinx will then try to build only these output files (and
-their dependencies).
+See :doc:`tutorial` for an introduction.  It also contains links to more
+advanced sections in this manual for the topics it discusses.
Only in doc: invocation.rst
Only in doc: man
diff -ur doc-0.6.3/markup/code.rst doc/markup/code.rst
--- doc-0.6.3/markup/code.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/markup/code.rst	2010-03-01 09:28:22.000000000 +0900
@@ -103,6 +103,9 @@
    is absolute (starting with ``/``), it is relative to the top source
    directory.
 
+   Tabs in the input are expanded if you give a ``tab-width`` option with the
+   desired tab width.
+
    The directive also supports the ``linenos`` flag option to switch on line
    numbers, and a ``language`` option to select a language different from the
    current file's standard language.  Example with options::
@@ -153,7 +156,7 @@
       The ``pyobject``, ``lines``, ``start-after`` and ``end-before`` options,
       as well as support for absolute filenames.
    .. versionadded:: 1.0
-      The ``prepend`` and ``append`` options.
+      The ``prepend`` and ``append`` options, as well as ``tab-width``.
 
 
 .. rubric:: Footnotes
Only in doc-0.6.3/markup: desc.rst
diff -ur doc-0.6.3/markup/index.rst doc/markup/index.rst
--- doc-0.6.3/markup/index.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/markup/index.rst	2010-04-10 17:23:07.000000000 +0900
@@ -1,3 +1,5 @@
+.. _sphinxmarkup:
+
 Sphinx Markup Constructs
 ========================
 
@@ -6,8 +8,10 @@
 
 .. toctree::
 
-   desc
+   toctree
    para
    code
    inline
    misc
+
+More markup is added by :ref:`domains`.
diff -ur doc-0.6.3/markup/inline.rst doc/markup/inline.rst
--- doc-0.6.3/markup/inline.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/markup/inline.rst	2010-04-10 17:23:07.000000000 +0900
@@ -1,5 +1,7 @@
 .. highlight:: rest
 
+.. _inline-markup:
+
 Inline markup
 =============
 
@@ -12,11 +14,13 @@
    free to use it for anything you like, e.g. variable names; use the
    :confval:`default_role` config value to set it to a known role.
 
+See :ref:`domains` for roles added by domains.
+
 
 .. _xref-syntax:
 
 Cross-referencing syntax
-------------------------
+~~~~~~~~~~~~~~~~~~~~~~~~
 
 Cross-references are generated by many semantic interpreted text roles.
 Basically, you only need to write ``:role:`target```, and a link will be created
@@ -32,195 +36,60 @@
 
 * If you prefix the content with ``!``, no reference/hyperlink will be created.
 
-* For the Python object roles, if you prefix the content with ``~``, the link
-  text will only be the last component of the target.  For example,
-  ``:meth:`~Queue.Queue.get``` will refer to ``Queue.Queue.get`` but only
-  display ``get`` as the link text.
+* If you prefix the content with ``~``, the link text will only be the last
+  component of the target.  For example, ``:py:meth:`~Queue.Queue.get``` will
+  refer to ``Queue.Queue.get`` but only display ``get`` as the link text.
 
   In HTML output, the link's ``title`` attribute (that is e.g. shown as a
   tool-tip on mouse-hover) will always be the full target name.
 
 
-Cross-referencing Python objects
---------------------------------
-
-The following roles refer to objects in modules and are possibly hyperlinked if
-a matching identifier is found:
-
-.. role:: mod
-
-   The name of a module; a dotted name may be used.  This should also be used for
-   package names.
-
-.. role:: func
-
-   The name of a Python function; dotted names may be used.  The role text
-   needs not include trailing parentheses to enhance readability; they will be
-   added automatically by Sphinx if the :confval:`add_function_parentheses`
-   config value is true (the default).
-
-.. role:: data
-
-   The name of a module-level variable.
-
-.. role:: const
-
-   The name of a "defined" constant.  This may be a C-language ``#define``
-   or a Python variable that is not intended to be changed.
-
-.. role:: class
-
-   A class name; a dotted name may be used.
-
-.. role:: meth
-
-   The name of a method of an object.  The role text should include the type
-   name and the method name; if it occurs within the description of a type,
-   the type name can be omitted.  A dotted name may be used.
-
-.. role:: attr
-
-   The name of a data attribute of an object.
-
-.. role:: exc
-
-   The name of an exception. A dotted name may be used.
-
-.. role:: obj
-
-   The name of an object of unspecified type.  Useful e.g. as the
-   :confval:`default_role`.
-
-   .. versionadded:: 0.4
-
-The name enclosed in this markup can include a module name and/or a class name.
-For example, ``:func:`filter``` could refer to a function named ``filter`` in
-the current module, or the built-in function of that name.  In contrast,
-``:func:`foo.filter``` clearly refers to the ``filter`` function in the ``foo``
-module.
-
-Normally, names in these roles are searched first without any further
-qualification, then with the current module name prepended, then with the
-current module and class name (if any) prepended.  If you prefix the name with a
-dot, this order is reversed.  For example, in the documentation of Python's
-:mod:`codecs` module, ``:func:`open``` always refers to the built-in function,
-while ``:func:`.open``` refers to :func:`codecs.open`.
-
-A similar heuristic is used to determine whether the name is an attribute of
-the currently documented class.
-
-
-Cross-referencing C constructs
-------------------------------
-
-The following roles create cross-references to C-language constructs if they
-are defined in the documentation:
-
-.. role:: cdata
-
-   The name of a C-language variable.
-
-.. role:: cfunc
-
-   The name of a C-language function. Should include trailing parentheses.
-
-.. role:: cmacro
-
-   The name of a "simple" C macro, as defined above.
-
-.. role:: ctype
-
-   The name of a C-language type.
-
-
-Cross-referencing other items of interest
------------------------------------------
-
-The following roles do possibly create a cross-reference, but do not refer to
-objects:
-
-.. role:: envvar
-
-   An environment variable.  Index entries are generated.  Also generates a link
-   to the matching :dir:`envvar` directive, if it exists.
-
-.. role:: token
-
-   The name of a grammar token (used to create links between
-   :dir:`productionlist` directives).
-
-.. role:: keyword
-
-   The name of a keyword in Python.  This creates a link to a reference label
-   with that name, if it exists.
-
-.. role:: option
-
-   A command-line option to an executable program.  The leading hyphen(s) must
-   be included.  This generates a link to a :dir:`cmdoption` directive, if it
-   exists.
-
-
-The following role creates a cross-reference to the term in the glossary:
-
-.. role:: term
-
-   Reference to a term in the glossary.  The glossary is created using the
-   ``glossary`` directive containing a definition list with terms and
-   definitions.  It does not have to be in the same file as the ``term`` markup,
-   for example the Python docs have one global glossary in the ``glossary.rst``
-   file.
-
-   If you use a term that's not explained in a glossary, you'll get a warning
-   during build.
-
-
 .. _ref-role:
 
 Cross-referencing arbitrary locations
 -------------------------------------
 
-.. index:: pair: ref; role
+.. role:: ref
 
-To support cross-referencing to arbitrary locations in any document, the
-standard reST labels are used.  For this to work label names must be unique
-throughout the entire documentation.  There are two ways in which you can refer
-to labels:
+   To support cross-referencing to arbitrary locations in any document, the
+   standard reST labels are used.  For this to work label names must be unique
+   throughout the entire documentation.  There are two ways in which you can
+   refer to labels:
 
-* If you place a label directly before a section title, you can reference to it
-  with ``:ref:`label-name```.  Example::
+   * If you place a label directly before a section title, you can reference to
+     it with ``:ref:`label-name```.  Example::
 
-     .. _my-reference-label:
+        .. _my-reference-label:
 
-     Section to cross-reference
-     --------------------------
+        Section to cross-reference
+        --------------------------
 
-     This is the text of the section.
+        This is the text of the section.
 
-     It refers to the section itself, see :ref:`my-reference-label`.
+        It refers to the section itself, see :ref:`my-reference-label`.
 
-  The ``:ref:`` role would then generate a link to the section, with the link
-  title being "Section to cross-reference".  This works just as well when
-  section and reference are in different source files.
+     The ``:ref:`` role would then generate a link to the section, with the link
+     title being "Section to cross-reference".  This works just as well when
+     section and reference are in different source files.
 
-  Automatic labels also work with figures: given ::
+     Automatic labels also work with figures: given ::
 
-     .. _my-figure:
+        .. _my-figure:
 
-     .. figure:: whatever
+        .. figure:: whatever
 
-        Figure caption
+           Figure caption
 
-  a reference ``:ref:`my-figure``` would insert a reference to the figure with
-  link text "Figure caption".
+     a reference ``:ref:`my-figure``` would insert a reference to the figure
+     with link text "Figure caption".
 
-* Labels that aren't placed before a section title can still be referenced to,
-  but you must give the link an explicit title, using this syntax: ``:ref:`Link
-  title <label-name>```.
+   * Labels that aren't placed before a section title can still be referenced
+     to, but you must give the link an explicit title, using this syntax:
+     ``:ref:`Link title <label-name>```.
 
-Using :role:`ref` is advised over standard reStructuredText links to sections
-(like ```Section title`_``) because it works across files, when section headings
-are changed, and for all builders that support cross-references.
+   Using :role:`ref` is advised over standard reStructuredText links to sections
+   (like ```Section title`_``) because it works across files, when section
+   headings are changed, and for all builders that support cross-references.
 
 
 Cross-referencing documents
@@ -405,6 +274,48 @@
 the standard reST markup for that purpose.
 
 
+Cross-referencing other items of interest
+-----------------------------------------
+
+The following roles do possibly create a cross-reference, but do not refer to
+objects:
+
+.. role:: envvar
+
+   An environment variable.  Index entries are generated.  Also generates a link
+   to the matching :dir:`envvar` directive, if it exists.
+
+.. role:: token
+
+   The name of a grammar token (used to create links between
+   :dir:`productionlist` directives).
+
+.. role:: keyword
+
+   The name of a keyword in Python.  This creates a link to a reference label
+   with that name, if it exists.
+
+.. role:: option
+
+   A command-line option to an executable program.  The leading hyphen(s) must
+   be included.  This generates a link to a :dir:`option` directive, if it
+   exists.
+
+
+The following role creates a cross-reference to the term in the glossary:
+
+.. role:: term
+
+   Reference to a term in the glossary.  The glossary is created using the
+   ``glossary`` directive containing a definition list with terms and
+   definitions.  It does not have to be in the same file as the ``term`` markup,
+   for example the Python docs have one global glossary in the ``glossary.rst``
+   file.
+
+   If you use a term that's not explained in a glossary, you'll get a warning
+   during build.
+
+
 .. _default-substitutions:
 
 Substitutions
diff -ur doc-0.6.3/markup/misc.rst doc/markup/misc.rst
--- doc-0.6.3/markup/misc.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/markup/misc.rst	2010-04-10 17:23:07.000000000 +0900
@@ -11,12 +11,12 @@
 reST has the concept of "field lists"; these are a sequence of fields marked up
 like this::
 
-   :Field name: Field content
+   :fieldname: Field content
 
-A field list at the very top of a file is parsed as the "docinfo", which in
-normal documents can be used to record the author, date of publication and
-other metadata.  In Sphinx, the docinfo is used as metadata, too, but not
-displayed in the output.
+A field list at the very top of a file is parsed by docutils as the "docinfo",
+which is normally used to record the author, date of publication and other
+metadata.  *In Sphinx*, the docinfo is used as metadata, too, but not displayed
+in the output.
 
 At the moment, these metadata fields are recognized:
 
@@ -29,11 +29,17 @@
    If set, the web application won't display a comment form for a page generated
    from this source file.
 
+``orphan``
+   If set, warnings about this file not being included in any toctree will be
+   suppressed.
+
+   .. versionadded:: 1.0
+
 
 Meta-information markup
 -----------------------
 
-.. directive:: sectionauthor
+.. directive:: .. sectionauthor:: name <email>
 
    Identifies the author of the current section.  The argument should include
    the author's name such that it can be used for presentation and email
@@ -48,6 +54,14 @@
    output.
 
 
+.. directive:: .. codeauthor:: name <email>
+
+   The :dir:`codeauthor` directive, which can appear multiple times, names the
+   authors of the described code, just like :dir:`sectionauthor` names the
+   author(s) of a piece of documentation.  It too only produces output if the
+   :confval:`show_authors` configuration value is True.
+
+
 .. _tags:
 
 Including content based on tags
@@ -73,10 +87,10 @@
 Tables
 ------
 
-Use standard reStructuredText tables.  They work fine in HTML output, however
-there are some gotchas when using tables in LaTeX: the column width is hard to
-determine correctly automatically.  For this reason, the following directive
-exists:
+Use :ref:`standard reStructuredText tables <rst-tables>`.  They work fine in
+HTML output, however there are some gotchas when using tables in LaTeX: the
+column width is hard to determine correctly automatically.  For this reason, the
+following directive exists:
 
 .. directive:: .. tabularcolumns:: column spec
 
diff -ur doc-0.6.3/markup/para.rst doc/markup/para.rst
--- doc-0.6.3/markup/para.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/markup/para.rst	2010-04-10 17:23:07.000000000 +0900
@@ -9,7 +9,7 @@
 These directives create short paragraphs and can be used inside information
 units as well as normal text:
 
-.. directive:: note
+.. directive:: .. note::
 
    An especially important bit of information about an API that a user should be
    aware of when using whatever bit of API the note pertains to.  The content of
@@ -22,13 +22,13 @@
 
          This function is not suitable for sending spam e-mails.
 
-.. directive:: warning
+.. directive:: .. warning::
 
    An important bit of information about an API that a user should be very aware
    of when using whatever bit of API the warning pertains to.  The content of
    the directive should be written in complete sentences and include all
-   appropriate punctuation. This differs from ``note`` in that it is recommended
-   over ``note`` for information regarding security.
+   appropriate punctuation. This differs from :dir:`note` in that it is
+   recommended over :dir:`note` for information regarding security.
 
 .. directive:: .. versionadded:: version
 
@@ -49,7 +49,7 @@
 
 .. directive:: .. versionchanged:: version
 
-   Similar to ``versionadded``, but describes when and what changed in the named
+   Similar to :dir:`versionadded`, but describes when and what changed in the named
    feature in some way (new parameters, changed side effects, etc.).
 
 --------------
@@ -57,26 +57,27 @@
 .. directive:: seealso
 
    Many sections include a list of references to module documentation or
-   external documents.  These lists are created using the ``seealso`` directive.
+   external documents.  These lists are created using the :dir:`seealso`
+   directive.
 
-   The ``seealso`` directive is typically placed in a section just before any
+   The :dir:`seealso` directive is typically placed in a section just before any
    sub-sections.  For the HTML output, it is shown boxed off from the main flow
    of the text.
 
-   The content of the ``seealso`` directive should be a reST definition list.
+   The content of the :dir:`seealso` directive should be a reST definition list.
    Example::
 
       .. seealso::
 
-         Module :mod:`zipfile`
-            Documentation of the :mod:`zipfile` standard module.
+         Module :py:mod:`zipfile`
+            Documentation of the :py:mod:`zipfile` standard module.
 
          `GNU tar manual, Basic Tar Format <http://link>`_
             Documentation for tar archive files, including GNU tar extensions.
 
    There's also a "short form" allowed that looks like this::
 
-      .. seealso:: modules :mod:`zipfile`, :mod:`tarfile`
+      .. seealso:: modules :py:mod:`zipfile`, :py:mod:`tarfile`
 
    .. versionadded:: 0.5
       The short form.
@@ -96,7 +97,8 @@
 
 .. directive:: centered
 
-   This directive creates a centered boldfaced line of text.  Use it as follows::
+   This directive creates a centered boldfaced line of text.  Use it as
+   follows::
 
       .. centered:: LICENSE AGREEMENT
 
@@ -126,16 +128,17 @@
 ------------------------
 
 The :dir:`toctree` directive, which generates tables of contents of
-subdocuments, is described in "Sphinx concepts".
+subdocuments, is described in :ref:`toctree-directive`.
 
-For local tables of contents, use the standard reST :dir:`contents` directive.
+For local tables of contents, use the standard reST :rstdir:`contents directive
+<contents>`.
 
 
 Index-generating markup
 -----------------------
 
-Sphinx automatically creates index entries from all information units (like
-functions, classes or attributes) like discussed before.
+Sphinx automatically creates index entries from all object descriptions (like
+functions, classes or attributes) like discussed in :ref:`domains`.
 
 However, there is also an explicit directive available, to make the index more
 comprehensive and enable index entries in documents where information is not
@@ -159,9 +162,9 @@
 
       ...
 
-   This directive contains five entries, which will be converted to entries in the
-   generated index which link to the exact location of the index statement (or, in
-   case of offline media, the corresponding page number).
+   This directive contains five entries, which will be converted to entries in
+   the generated index which link to the exact location of the index statement
+   (or, in case of offline media, the corresponding page number).
 
    Since index directives generate cross-reference targets at their location in
    the source, it makes sense to put them *before* the thing they refer to --
@@ -171,18 +174,19 @@
 
    single
       Creates a single index entry.  Can be made a subentry by separating the
-      subentry text with a semicolon (this notation is also used below to describe
-      what entries are created).
+      subentry text with a semicolon (this notation is also used below to
+      describe what entries are created).
    pair
       ``pair: loop; statement`` is a shortcut that creates two index entries,
       namely ``loop; statement`` and ``statement; loop``.
    triple
-      Likewise, ``triple: module; search; path`` is a shortcut that creates three
-      index entries, which are ``module; search path``, ``search; path, module`` and
-      ``path; module search``.
+      Likewise, ``triple: module; search; path`` is a shortcut that creates
+      three index entries, which are ``module; search path``, ``search; path,
+      module`` and ``path; module search``.
    module, keyword, operator, object, exception, statement, builtin
-      These all create two index entries.  For example, ``module: hashlib`` creates
-      the entries ``module; hashlib`` and ``hashlib; module``.
+      These all create two index entries.  For example, ``module: hashlib``
+      creates the entries ``module; hashlib`` and ``hashlib; module``.  (These
+      are Python-specific and therefore deprecated.)
 
    For index directives containing only "single" entries, there is a shorthand
    notation::
@@ -195,7 +199,7 @@
 Glossary
 --------
 
-.. directive:: glossary
+.. directive:: .. glossary::
 
    This directive must contain a reST definition list with terms and
    definitions.  The definitions will then be referencable with the :role:`term`
@@ -227,7 +231,7 @@
 displayed in a way that causes uses of a symbol to be rendered as hyperlinks to
 the definition of the symbol.  There is this directive:
 
-.. directive:: productionlist
+.. directive:: .. productionlist:: [name]
 
    This directive is used to enclose a group of productions.  Each production is
    given on a single line and consists of a name, separated by a colon from the
@@ -235,17 +239,19 @@
    continuation line must begin with a colon placed at the same column as in the
    first line.
 
+   The argument to :dir:`productionlist` serves to distinguish different sets of
+   production lists that belong to different grammars.
+
    Blank lines are not allowed within ``productionlist`` directive arguments.
 
    The definition can contain token names which are marked as interpreted text
    (e.g. ``sum ::= `integer` "+" `integer```) -- this generates cross-references
-   to the productions of these tokens.
+   to the productions of these tokens.  Outside of the production list, you can
+   reference to token productions using :role:`token`.
 
    Note that no further reST parsing is done in the production, so that you
    don't have to escape ``*`` or ``|`` characters.
 
-.. XXX describe optional first parameter
-
 The following is an example taken from the Python Reference Manual::
 
    .. productionlist::
Only in doc/markup: toctree.rst
Only in doc: more.png
diff -ur doc-0.6.3/rest.rst doc/rest.rst
--- doc-0.6.3/rest.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/rest.rst	2010-04-10 17:23:07.000000000 +0900
@@ -1,5 +1,7 @@
 .. highlightlang:: rest
 
+.. _rst-primer:
+
 reStructuredText Primer
 =======================
 
@@ -10,18 +12,22 @@
 
 .. seealso::
 
-    The authoritative `reStructuredText User
-    Documentation <http://docutils.sourceforge.net/rst.html>`_.
+   The authoritative `reStructuredText User Documentation
+   <http://docutils.sourceforge.net/rst.html>`_.  The "ref" links in this
+   document link to the description of the individual constructs in the reST
+   reference.
 
 
 Paragraphs
 ----------
 
-The paragraph is the most basic block in a reST document.  Paragraphs are simply
-chunks of text separated by one or more blank lines.  As in Python, indentation
-is significant in reST, so all lines of the same paragraph must be left-aligned
-to the same level of indentation.
+The paragraph (:rstref:`ref <paragraphs>`) is the most basic block in a reST
+document.  Paragraphs are simply chunks of text separated by one or more blank
+lines.  As in Python, indentation is significant in reST, so all lines of the
+same paragraph must be left-aligned to the same level of indentation.
+
 
+.. _inlinemarkup:
 
 Inline markup
 -------------
@@ -49,13 +55,25 @@
 provide semantic markup and cross-referencing of identifiers, as described in
 the appropriate section.  The general syntax is ``:rolename:`content```.
 
+Standard reST provides the following roles:
+
+* :rstrole:`emphasis` -- alternate spelling for ``*emphasis*``
+* :rstrole:`strong` -- alternate spelling for ``**strong**``
+* :rstrole:`literal` -- alternate spelling for ````literal````
+* :rstrole:`subscript` -- subscript text
+* :rstrole:`superscript` -- superscript text
+* :rstrole:`title-reference` -- for titles of books, periodicals, and other
+  materials
+
+See :ref:`inline-markup` for roles added by Sphinx.
+
 
-Lists and Quotes
-----------------
+Lists and Quote-like blocks
+---------------------------
 
-List markup is natural: just place an asterisk at the start of a paragraph and
-indent properly.  The same goes for numbered lists; they can also be
-autonumbered using a ``#`` sign::
+List markup (:rstref:`ref <bullet-lists>`) is natural: just place an asterisk at
+the start of a paragraph and indent properly.  The same goes for numbered lists;
+they can also be autonumbered using a ``#`` sign::
 
    * This is a bulleted list.
    * It has two items, the second
@@ -79,7 +97,7 @@
 
    * and here the parent list continues
 
-Definition lists are created as follows::
+Definition lists (:rstref:`ref <definition-lists>`) are created as follows::
 
    term (up to a line of text)
       Definition of the term, which must be indented
@@ -89,17 +107,31 @@
    next term
       Description.
 
+Note that the term cannot have more than one line of text.
 
-Paragraphs are quoted by just indenting them more than the surrounding
-paragraphs.
+Quoted paragraphs (:rstref:`ref <block-quotes>`) are created by just indenting
+them more than the surrounding paragraphs.
+
+Line blocks (:rstref:`ref <line-blocks>`) are a way of preserving line breaks::
+
+   | These lines are
+   | broken exactly like in
+   | the source file.
+
+There are also several more special blocks available:
+
+* field lists (:rstref:`ref <field-lists>`)
+* option lists (:rstref:`ref <option-lists>`)
+* quoted literal blocks (:rstref:`ref <quoted-literal-blocks>`)
+* doctest blocks (:rstref:`ref <doctest-blocks>`)
 
 
 Source Code
 -----------
 
-Literal code blocks are introduced by ending a paragraph with the special marker
-``::``.  The literal block must be indented (and, like all paragraphs, separated
-from the surrounding ones by blank lines)::
+Literal code blocks (:rstref:`ref <literal-blocks>`) are introduced by ending a
+paragraph with the special marker ``::``.  The literal block must be indented
+(and, like all paragraphs, separated from the surrounding ones by blank lines)::
 
    This is a normal text paragraph. The next paragraph is a code sample::
 
@@ -122,28 +154,69 @@
 rendered as "The next paragraph is a code sample:".
 
 
+.. _rst-tables:
+
+Tables
+------
+
+Two forms of tables are supported.  For *grid tables* (:rstref:`ref
+<grid-tables>`), you have to "paint" the cell grid yourself.  They look like
+this::
+
+   +------------------------+------------+----------+----------+
+   | Header row, column 1   | Header 2   | Header 3 | Header 4 |
+   | (header rows optional) |            |          |          |
+   +========================+============+==========+==========+
+   | body row 1, column 1   | column 2   | column 3 | column 4 |
+   +------------------------+------------+----------+----------+
+   | body row 2             | ...        | ...      |          |
+   +------------------------+------------+----------+----------+
+
+*Simple tables* (:rstref:`ref <simple-tables>`) are easier to write, but
+limited: they must contain more than one row, and the first column cannot
+contain multiple lines.  They look like this::
+
+   =====  =====  =======
+   A      B      A and B
+   =====  =====  =======
+   False  False  False
+   True   False  False
+   False  True   False
+   True   True   True
+   =====  =====  =======
+
+
 Hyperlinks
 ----------
 
 External links
 ^^^^^^^^^^^^^^
 
-Use ```Link text <http://target>`_`` for inline web links.  If the link text
-should be the web address, you don't need special markup at all, the parser
+Use ```Link text <http://example.com/>`_`` for inline web links.  If the link
+text should be the web address, you don't need special markup at all, the parser
 finds links and mail addresses in ordinary text.
 
+You can also separate the link and the target definition (:rstref:`ref
+<hyperlink-targets>`), like this::
+
+   This is a paragraph that contains `a link`_.
+
+   .. _a link: http://example.com/
+
+
 Internal links
 ^^^^^^^^^^^^^^
 
-Internal linking is done via a special reST role, see the section on specific
-markup, :ref:`ref-role`.
+Internal linking is done via a special reST role provided by Sphinx, see the
+section on specific markup, :ref:`ref-role`.
 
 
 Sections
 --------
 
-Section headers are created by underlining (and optionally overlining) the
-section title with a punctuation character, at least as long as the text::
+Section headers (:rstref:`ref <sections>`) are created by underlining (and
+optionally overlining) the section title with a punctuation character, at least
+as long as the text::
 
    =================
    This is a heading
@@ -168,9 +241,9 @@
 Explicit Markup
 ---------------
 
-"Explicit markup" is used in reST for most constructs that need special
-handling, such as footnotes, specially-highlighted paragraphs, comments, and
-generic directives.
+"Explicit markup" (:rstref:`ref <explicit-markup-blocks>`) is used in reST for
+most constructs that need special handling, such as footnotes,
+specially-highlighted paragraphs, comments, and generic directives.
 
 An explicit markup block begins with a line starting with ``..`` followed by
 whitespace and is terminated by the next paragraph at the same level of
@@ -179,11 +252,70 @@
 when you write it.)
 
 
+.. _directives:
+
 Directives
 ----------
 
-A directive is a generic block of explicit markup.  Besides roles, it is one of
-the extension mechanisms of reST, and Sphinx makes heavy use of it.
+A directive (:rstref:`ref <directives>`) is a generic block of explicit markup.
+Besides roles, it is one of the extension mechanisms of reST, and Sphinx makes
+heavy use of it.
+
+Docutils supports the following directives:
+
+* Admonitions: :rstdir:`attention`, :rstdir:`caution`, :rstdir:`danger`,
+  :rstdir:`error`, :rstdir:`hint`, :rstdir:`important`, :rstdir:`note`,
+  :rstdir:`tip`, :rstdir:`warning` and the generic :rstdir:`admonition`.
+  (Most themes style only "note" and "warning" specially.)
+
+* Images:
+
+  - :rstdir:`image` (see also Images_ below)
+  - :rstdir:`figure` (an image with caption and optional legend)
+
+* Additional body elements:
+
+  - :rstdir:`contents` (a local, i.e. for the current file only, table of
+    contents)
+  - :rstdir:`container` (a container with a custom class, useful to generate an
+    outer ``<div>`` in HTML)
+  - :rstdir:`rubric` (a heading without relation to the document sectioning)
+  - :rstdir:`topic`, :rstdir:`sidebar` (special highlighted body elements)
+  - :rstdir:`parsed-literal` (literal block that supports inline markup)
+  - :rstdir:`epigraph` (a block quote with optional attribution line)
+  - :rstdir:`highlights`, :rstdir:`pull-quote` (block quotes with their own
+    class attribute)
+  - :rstdir:`compound` (a compound paragraph)
+
+* Special tables:
+
+  - :rstdir:`table` (a table with title)
+  - :rstdir:`csv-table` (a table generated from comma-separated values)
+  - :rstdir:`list-table` (a table generated from a list of lists)
+
+* Special directives:
+
+  - :rstdir:`raw` (include raw target-format markup)
+  - :rstdir:`include` (include reStructuredText from another file)
+  - :rstdir:`class` (assign a class attribute to the next element) [1]_
+
+* HTML specifics:
+
+  - :rstdir:`meta` (generation of HTML ``<meta>`` tags)
+  - :rstdir:`title` (override document title)
+
+* Influencing markup:
+
+  - :rstdir:`default-role` (set a new default role)
+  - :rstdir:`role` (create a new role)
+
+  Since these are only per-file, better use Sphinx' facilities for setting the
+  :confval:`default_role`.
+
+Do *not* use the directives :rstdir:`sectnum`, :rstdir:`header` and
+:rstdir:`footer`.
+
+Directives added by Sphinx are described in :ref:`sphinxmarkup`.
 
 Basically, a directive consists of a name, arguments, options and content. (Keep
 this terminology in mind, it is used in the next chapter describing custom
@@ -207,7 +339,7 @@
 Images
 ------
 
-reST supports an image directive, used like so::
+reST supports an image directive (:rstdir:`ref <image>`), used like so::
 
    .. image:: gnu.png
       (options)
@@ -247,9 +379,9 @@
 Footnotes
 ---------
 
-For footnotes, use ``[#name]_`` to mark the footnote location, and add the
-footnote body at the bottom of the document after a "Footnotes" rubric heading,
-like so::
+For footnotes (:rstref:`ref <footnotes>`), use ``[#name]_`` to mark the footnote
+location, and add the footnote body at the bottom of the document after a
+"Footnotes" rubric heading, like so::
 
    Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_
 
@@ -265,9 +397,9 @@
 Citations
 ---------
 
-Standard reST citations are supported, with the additional feature that they are
-"global", i.e. all citations can be referenced from all files.  Use them like
-so::
+Standard reST citations (:rstref:`ref <citations>`) are supported, with the
+additional feature that they are "global", i.e. all citations can be referenced
+from all files.  Use them like so::
 
    Lorem ipsum [Ref]_ dolor sit amet.
 
@@ -280,14 +412,18 @@
 Substitutions
 -------------
 
-reST supports "substitutions", which are pieces of text and/or markup referred
-to in the text by ``|name|``.  They are defined like footnotes with explicit
-markup blocks, like this::
+reST supports "substitutions" (:rstref:`ref <substitution-definitions>`), which
+are pieces of text and/or markup referred to in the text by ``|name|``.  They
+are defined like footnotes with explicit markup blocks, like this::
 
    .. |name| replace:: replacement *text*
 
-See the `reST reference for substitutions
-<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`_
+or this::
+
+   .. |caution| image:: warning.png
+                :alt: Warning!
+
+See the :rstref:`reST reference for substitutions <substitution-definitions>`
 for details.
 
 If you want to use some substitutions for all documents, put them into a
@@ -303,7 +439,8 @@
 --------
 
 Every explicit markup block which isn't a valid markup construct (like the
-footnotes above) is regarded as a comment.  For example::
+footnotes above) is regarded as a comment (:rstref:`ref <comments>`).  For
+example::
 
    .. This is a comment.
 
@@ -331,10 +468,16 @@
 There are some problems one commonly runs into while authoring reST documents:
 
 * **Separation of inline markup:** As said above, inline markup spans must be
-  separated from the surrounding text by non-word characters, you have to use
-  a backslash-escaped space to get around that.
+  separated from the surrounding text by non-word characters, you have to use a
+  backslash-escaped space to get around that.  See `the reference
+  <http://docutils.sf.net/docs/ref/rst/restructuredtext.html#inline-markup>`_
+  for the details.
 
 * **No nested inline markup:** Something like ``*see :func:`foo`*`` is not
   possible.
 
-.. XXX more?
+
+.. rubric:: Footnotes
+
+.. [1] When the default domain contains a :dir:`class` directive, this directive
+       will be shadowed.  Therefore, Sphinx re-exports it as :dir:`rst-class`.
Only in doc-0.6.3: sphinx-build.1
Only in doc-0.6.3: sphinx-quickstart.1
diff -ur doc-0.6.3/templating.rst doc/templating.rst
--- doc-0.6.3/templating.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/templating.rst	2010-04-10 17:23:07.000000000 +0900
@@ -74,8 +74,8 @@
 that content to show up.
 
 
-Working the the builtin templates
----------------------------------
+Working with the builtin templates
+----------------------------------
 
 The builtin **basic** theme supplies the templates that all builtin Sphinx
 themes are based on.  It has the following elements you can override or use:
@@ -139,23 +139,36 @@
     The logo location within the sidebar.  Override this if you want to place
     some content at the top of the sidebar.
 
+`footer`
+    The block for the footer div.  If you want a custom footer or markup before
+    or after it, override this one.
+
+The following four blocks are *only* used for pages that do not have assigned a
+list of custom sidebars in the :confval:`html_sidebars` config value.  Their use
+is deprecated in favor of separate sidebar templates, which can be included via
+:confval:`html_sidebars`.
+
 `sidebartoc`
     The table of contents within the sidebar.
 
+    .. deprecated:: 1.0
+
 `sidebarrel`
     The relation links (previous, next document) within the sidebar.
 
+    .. deprecated:: 1.0
+
 `sidebarsourcelink`
     The "Show source" link within the sidebar (normally only shown if this is
     enabled by :confval:`html_show_sourcelink`).
 
+    .. deprecated:: 1.0
+
 `sidebarsearch`
     The search box within the sidebar.  Override this if you want to place some
     content at the bottom of the sidebar.
 
-`footer`
-    The block for the footer div.  If you want a custom footer or markup before
-    or after it, override this one.
+    .. deprecated:: 1.0
 
 
 Configuration Variables
@@ -305,9 +318,9 @@
 .. data:: rellinks
 
    A list of links to put at the left side of the relbar, next to "next" and
-   "prev".  This usually contains links to the index and the modindex.  If you
-   add something yourself, it must be a tuple ``(pagename, link title,
-   accesskey, link text)``.
+   "prev".  This usually contains links to the general index and other indices,
+   such as the Python module index.  If you add something yourself, it must be a
+   tuple ``(pagename, link title, accesskey, link text)``.
 
 .. data:: shorttitle
 
@@ -364,5 +377,10 @@
 .. data:: toctree
 
    A callable yielding the global TOC tree containing the current page, rendered
-   as HTML bullet lists.  If the optional keyword argument ``collapse`` is true,
-   all TOC entries that are not ancestors of the current page are collapsed.
+   as HTML bullet lists.  Optional keyword arguments:
+
+   * ``collapse`` (true by default): if true, all TOC entries that are not
+     ancestors of the current page are collapsed
+
+   * ``maxdepth`` (defaults to the max depth selected in the toctree directive):
+     the maximum depth of the tree; set it to ``-1`` to allow unlimited depth
Only in doc: themes
diff -ur doc-0.6.3/theming.rst doc/theming.rst
--- doc-0.6.3/theming.rst	2010-04-10 17:26:49.000000000 +0900
+++ doc/theming.rst	2010-03-01 09:28:22.000000000 +0900
@@ -52,17 +52,50 @@
 Builtin themes
 --------------
 
-Sphinx comes with a selection of themes to choose from:
+.. cssclass:: right
+
++--------------------+--------------------+
+| **Theme overview** |                    |
++--------------------+--------------------+
+| |default|          | |sphinxdoc|        |
+|                    |                    |
+| *default*          | *sphinxdoc*        |
++--------------------+--------------------+
+| |scrolls|          | |agogo|            |
+|                    |                    |
+| *scrolls*          | *agogo*            |
++--------------------+--------------------+
+| |traditional|      | |nature|           |
+|                    |                    |
+| *traditional*      | *nature*           |
++--------------------+--------------------+
+| |haiku|            |                    |
+|                    |                    |
+| *haiku*            |                    |
++--------------------+--------------------+
+
+.. |default|     image:: themes/default.png
+.. |sphinxdoc|   image:: themes/sphinxdoc.png
+.. |scrolls|     image:: themes/scrolls.png
+.. |agogo|       image:: themes/agogo.png
+.. |traditional| image:: themes/traditional.png
+.. |nature|      image:: themes/nature.png
+.. |haiku|       image:: themes/haiku.png
+
+Sphinx comes with a selection of themes to choose from.
+
+These themes are:
 
 * **basic** -- This is a basically unstyled layout used as the base for the
-  *default* and *sphinxdoc* themes, and usable as the base for custom themes as
-  well.  The HTML contains all important elements like sidebar and relation bar.
-  There is one option (which is inherited by *default* and *sphinxdoc*):
+  other themes, and usable as the base for custom themes as well.  The HTML
+  contains all important elements like sidebar and relation bar.  There is one
+  option (which is inherited by the other themes):
 
   - **nosidebar** (true or false): Don't include the sidebar.  Defaults to
     false.
 
-* **default** -- This is the default theme.  It can be customized via these
+* **default** -- This is the default theme, which looks like `the Python
+  documentation <http://docs.python.org/>`_.  It can be customized via these
   options:
 
   - **rightsidebar** (true or false): Put the sidebar on the right side.
@@ -100,9 +133,59 @@
 * **sphinxdoc** -- The theme used for this documentation.  It features a sidebar
   on the right side.  There are currently no options beyond *nosidebar*.
 
+* **scrolls** -- A more lightweight theme, based on `the Jinja documentation
+  <http://jinja.pocoo.org/2/documentation/>`_.  The following color options are
+  available:
+
+  - **headerbordercolor**
+  - **subheadlinecolor**
+  - **linkcolor**
+  - **visitedlinkcolor**
+  - **admonitioncolor**
+
+* **agogo** -- A theme created by Andi Albrecht.  The following options are
+  supported:
+
+  - **bodyfont** (CSS font family): Font for normal text.
+  - **headerfont** (CSS font family): Font for headings.
+  - **pagewidth** (CSS length): Width of the page content, default 70em.
+  - **documentwidth** (CSS length): Width of the document (without sidebar),
+    default 50em.
+  - **sidebarwidth** (CSS length): Width of the sidebar, default 20em.
+  - **bgcolor** (CSS color): Background color.
+  - **headerbg** (CSS value for "background"): background for the header area,
+    default a grayish gradient.
+  - **footerbg** (CSS value for "background"): background for the footer area,
+    default a light gray gradient.
+  - **linkcolor** (CSS color): Body link color.
+  - **headercolor1**, **headercolor2** (CSS color): colors for <h1> and <h2>
+    headings.
+  - **headerlinkcolor** (CSS color): Color for the backreference link in
+    headings.
+  - **textalign** (CSS *text-align* value): Text alignment for the body, default
+    is ``justify``.
+
+* **nature** -- A greenish theme.  There are currently no options beyond
+  *nosidebar*.
+
+* **haiku** -- A theme without sidebar inspired by the `Haiku OS user guide
+  <http://www.haiku-os.org/docs/userguide/en/contents.html>`_.  The following
+  options are supported:
+
+  - **full_logo** (true or false, default false): If this is true, the header
+    will only show the :confval:`html_logo`.  Use this for large logos.  If this
+    is false, the logo (if present) will be shown floating right, and the
+    documentation title will be put in the header.
+  - **textcolor**, **headingcolor**, **linkcolor**, **visitedlinkcolor**,
+    **hoverlinkcolor** (CSS colors): Colors for various body elements.
+
 * **traditional** -- A theme resembling the old Python documentation.  There are
   currently no options beyond *nosidebar*.
 
+* **epub** -- A theme for the epub builder.  There are currently no options.
+  This theme tries to save visual space which is a sparse resource on ebook
+  readers.
+
 
 Creating themes
 ---------------
Only in doc: tutorial.rst
